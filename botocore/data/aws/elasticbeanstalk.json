{
  "operations": {
    "DescribeApplicationVersions": {
      "name": "DescribeApplicationVersions",
      "doc": [
        "Returns descriptions for existing application versions."
      ],
      "method_name": "describe_application_versions",
      "output": [
        {
          "type": "output",
          "target": "ApplicationVersionDescriptionsMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "DescribeApplicationVersionsMessage"
        }
      ],
      "type": "operation"
    },
    "RequestEnvironmentInfo": {
      "name": "RequestEnvironmentInfo",
      "doc": [
        "Initiates a request to compile the specified type of information of the deployed environment.",
        "Setting the <code>InfoType</code> to <code>tail</code> compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. Use <a>RetrieveEnvironmentInfo</a> to access the compiled information.",
        "Related Topics"
      ],
      "method_name": "request_environment_info",
      "input": [
        {
          "type": "input",
          "target": "RequestEnvironmentInfoMessage"
        }
      ],
      "type": "operation"
    },
    "DescribeEnvironmentResources": {
      "name": "DescribeEnvironmentResources",
      "doc": [
        "Returns AWS resources for this environment."
      ],
      "error": [
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        }
      ],
      "method_name": "describe_environment_resources",
      "output": [
        {
          "type": "output",
          "target": "EnvironmentResourceDescriptionsMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "DescribeEnvironmentResourcesMessage"
        }
      ],
      "type": "operation"
    },
    "ListAvailableSolutionStacks": {
      "name": "ListAvailableSolutionStacks",
      "doc": [
        "Returns a list of the available solution stack names."
      ],
      "method_name": "list_available_solution_stacks",
      "output": [
        {
          "type": "output",
          "target": "ListAvailableSolutionStacksResultMessage"
        }
      ],
      "type": "operation"
    },
    "DescribeEvents": {
      "name": "DescribeEvents",
      "doc": [
        "Returns list of event descriptions matching criteria up to the last 6 weeks."
      ],
      "method_name": "describe_events",
      "output": [
        {
          "type": "output",
          "target": "EventDescriptionsMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "DescribeEventsMessage"
        }
      ],
      "type": "operation"
    },
    "DeleteApplication": {
      "name": "DeleteApplication",
      "doc": [
        "Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket."
      ],
      "method_name": "delete_application",
      "error": [
        {
          "type": "error",
          "target": "OperationInProgressException"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "DeleteApplicationMessage"
        }
      ],
      "type": "operation"
    },
    "UpdateApplicationVersion": {
      "name": "UpdateApplicationVersion",
      "doc": [
        "Updates the specified application version to have the specified properties."
      ],
      "method_name": "update_application_version",
      "output": [
        {
          "type": "output",
          "target": "ApplicationVersionDescriptionMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "UpdateApplicationVersionMessage"
        }
      ],
      "type": "operation"
    },
    "DescribeConfigurationOptions": {
      "name": "DescribeConfigurationOptions",
      "doc": [
        "Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed."
      ],
      "method_name": "describe_configuration_options",
      "output": [
        {
          "type": "output",
          "target": "ConfigurationOptionsDescription"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "DescribeConfigurationOptionsMessage"
        }
      ],
      "type": "operation"
    },
    "DeleteConfigurationTemplate": {
      "name": "DeleteConfigurationTemplate",
      "doc": [
        "Deletes the specified configuration template."
      ],
      "method_name": "delete_configuration_template",
      "error": [
        {
          "type": "error",
          "target": "OperationInProgressException"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "DeleteConfigurationTemplateMessage"
        }
      ],
      "type": "operation"
    },
    "ValidateConfigurationSettings": {
      "name": "ValidateConfigurationSettings",
      "doc": [
        "Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid.",
        "This action returns a list of messages indicating any errors or warnings associated with the selection of option values."
      ],
      "error": [
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        }
      ],
      "method_name": "validate_configuration_settings",
      "output": [
        {
          "type": "output",
          "target": "ConfigurationSettingsValidationMessages"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "ValidateConfigurationSettingsMessage"
        }
      ],
      "type": "operation"
    },
    "TerminateEnvironment": {
      "name": "TerminateEnvironment",
      "doc": [
        "Terminates the specified environment."
      ],
      "error": [
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        }
      ],
      "method_name": "terminate_environment",
      "output": [
        {
          "type": "output",
          "target": "EnvironmentDescription"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "TerminateEnvironmentMessage"
        }
      ],
      "type": "operation"
    },
    "DescribeConfigurationSettings": {
      "name": "DescribeConfigurationSettings",
      "doc": [
        "Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.",
        "When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.",
        "Related Topics"
      ],
      "method_name": "describe_configuration_settings",
      "output": [
        {
          "type": "output",
          "target": "ConfigurationSettingsDescriptions"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "DescribeConfigurationSettingsMessage"
        }
      ],
      "type": "operation"
    },
    "CreateStorageLocation": {
      "name": "CreateStorageLocation",
      "doc": [
        "Creates the Amazon S3 storage location for the account.",
        "This location is used to store user log files."
      ],
      "method_name": "create_storage_location",
      "error": [
        {
          "type": "error",
          "target": "TooManyBucketsException"
        },
        {
          "type": "error",
          "target": "S3SubscriptionRequiredException"
        },
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        }
      ],
      "output": [
        {
          "type": "output",
          "target": "CreateStorageLocationResultMessage"
        }
      ],
      "type": "operation"
    },
    "DeleteApplicationVersion": {
      "name": "DeleteApplicationVersion",
      "doc": [
        "Deletes the specified version from the specified application."
      ],
      "method_name": "delete_application_version",
      "error": [
        {
          "type": "error",
          "target": "SourceBundleDeletionException"
        },
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        },
        {
          "type": "error",
          "target": "OperationInProgressException"
        },
        {
          "type": "error",
          "target": "S3LocationNotInServiceRegionException"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "DeleteApplicationVersionMessage"
        }
      ],
      "type": "operation"
    },
    "RetrieveEnvironmentInfo": {
      "name": "RetrieveEnvironmentInfo",
      "doc": [
        "Retrieves the compiled information from a <a>RequestEnvironmentInfo</a> request.",
        "Related Topics"
      ],
      "method_name": "retrieve_environment_info",
      "output": [
        {
          "type": "output",
          "target": "RetrieveEnvironmentInfoResultMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "RetrieveEnvironmentInfoMessage"
        }
      ],
      "type": "operation"
    },
    "UpdateApplication": {
      "name": "UpdateApplication",
      "doc": [
        "Updates the specified application to have the specified properties."
      ],
      "method_name": "update_application",
      "output": [
        {
          "type": "output",
          "target": "ApplicationDescriptionMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "UpdateApplicationMessage"
        }
      ],
      "type": "operation"
    },
    "UpdateEnvironment": {
      "name": "UpdateEnvironment",
      "doc": [
        "Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.",
        "Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error.",
        "When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values."
      ],
      "error": [
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        }
      ],
      "method_name": "update_environment",
      "output": [
        {
          "type": "output",
          "target": "EnvironmentDescription"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "UpdateEnvironmentMessage"
        }
      ],
      "type": "operation"
    },
    "DescribeEnvironments": {
      "name": "DescribeEnvironments",
      "doc": [
        "Returns descriptions for existing environments."
      ],
      "method_name": "describe_environments",
      "output": [
        {
          "type": "output",
          "target": "EnvironmentDescriptionsMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "DescribeEnvironmentsMessage"
        }
      ],
      "type": "operation"
    },
    "UpdateConfigurationTemplate": {
      "name": "UpdateConfigurationTemplate",
      "doc": [
        "Updates the specified configuration template to have the specified properties or configuration option values.",
        "Related Topics"
      ],
      "error": [
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        }
      ],
      "method_name": "update_configuration_template",
      "output": [
        {
          "type": "output",
          "target": "ConfigurationSettingsDescription"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "UpdateConfigurationTemplateMessage"
        }
      ],
      "type": "operation"
    },
    "DeleteEnvironmentConfiguration": {
      "name": "DeleteEnvironmentConfiguration",
      "doc": [
        "Deletes the draft configuration associated with the running environment.",
        "Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using <a>DescribeConfigurationSettings</a> while the update is in progress or if the update fails. The <code>DeploymentStatus</code> for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action."
      ],
      "method_name": "delete_environment_configuration",
      "input": [
        {
          "type": "input",
          "target": "DeleteEnvironmentConfigurationMessage"
        }
      ],
      "type": "operation"
    },
    "CreateEnvironment": {
      "name": "CreateEnvironment",
      "doc": [
        "Launches an environment for the specified application using the specified configuration."
      ],
      "error": [
        {
          "type": "error",
          "target": "TooManyEnvironmentsException"
        },
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        }
      ],
      "method_name": "create_environment",
      "output": [
        {
          "type": "output",
          "target": "EnvironmentDescription"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "CreateEnvironmentMessage"
        }
      ],
      "type": "operation"
    },
    "SwapEnvironmentCNAMEs": {
      "name": "SwapEnvironmentCNAMEs",
      "doc": [
        "Swaps the CNAMEs of two environments."
      ],
      "method_name": "swap_environment_c_n_a_m_es",
      "input": [
        {
          "type": "input",
          "target": "SwapEnvironmentCNAMEsMessage"
        }
      ],
      "type": "operation"
    },
    "CreateApplication": {
      "name": "CreateApplication",
      "doc": [
        "Creates an application that has one configuration template named <code>default</code> and no application versions."
      ],
      "error": [
        {
          "type": "error",
          "target": "TooManyApplicationsException"
        }
      ],
      "method_name": "create_application",
      "output": [
        {
          "type": "output",
          "target": "ApplicationDescriptionMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "CreateApplicationMessage"
        }
      ],
      "type": "operation"
    },
    "RebuildEnvironment": {
      "name": "RebuildEnvironment",
      "doc": [
        "Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart."
      ],
      "method_name": "rebuild_environment",
      "error": [
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "RebuildEnvironmentMessage"
        }
      ],
      "type": "operation"
    },
    "RestartAppServer": {
      "name": "RestartAppServer",
      "doc": [
        "Causes the environment to restart the application container server running on each Amazon EC2 instance."
      ],
      "method_name": "restart_app_server",
      "input": [
        {
          "type": "input",
          "target": "RestartAppServerMessage"
        }
      ],
      "type": "operation"
    },
    "DescribeApplications": {
      "name": "DescribeApplications",
      "doc": [
        "Returns the descriptions of existing applications."
      ],
      "method_name": "describe_applications",
      "output": [
        {
          "type": "output",
          "target": "ApplicationDescriptionsMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "DescribeApplicationsMessage"
        }
      ],
      "type": "operation"
    },
    "CreateApplicationVersion": {
      "name": "CreateApplicationVersion",
      "doc": [
        "Creates an application version for the specified application."
      ],
      "error": [
        {
          "type": "error",
          "target": "TooManyApplicationsException"
        },
        {
          "type": "error",
          "target": "TooManyApplicationVersionsException"
        },
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        },
        {
          "type": "error",
          "target": "S3LocationNotInServiceRegionException"
        }
      ],
      "method_name": "create_application_version",
      "output": [
        {
          "type": "output",
          "target": "ApplicationVersionDescriptionMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "CreateApplicationVersionMessage"
        }
      ],
      "type": "operation"
    },
    "CreateConfigurationTemplate": {
      "name": "CreateConfigurationTemplate",
      "doc": [
        "Creates a configuration template. Templates are associated with a specific application and are used to deploy different versions of the application with the same configuration settings.",
        "Related Topics"
      ],
      "error": [
        {
          "type": "error",
          "target": "InsufficientPrivilegesException"
        },
        {
          "type": "error",
          "target": "TooManyConfigurationTemplatesException"
        }
      ],
      "method_name": "create_configuration_template",
      "output": [
        {
          "type": "output",
          "target": "ConfigurationSettingsDescription"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "CreateConfigurationTemplateMessage"
        }
      ],
      "type": "operation"
    },
    "CheckDNSAvailability": {
      "name": "CheckDNSAvailability",
      "doc": [
        "Checks if the specified CNAME is available."
      ],
      "method_name": "check_d_n_s_availability",
      "output": [
        {
          "type": "output",
          "target": "CheckDNSAvailabilityResultMessage"
        }
      ],
      "input": [
        {
          "type": "input",
          "target": "CheckDNSAvailabilityMessage"
        }
      ],
      "type": "operation"
    }
  },
  "name": "AWSElasticBeanstalkService",
  "service_version": "2010-12-01",
  "service_name": "elasticbeanstalk",
  "exceptions": {},
  "datatypes": {
    "ConfigurationOptionValueType": {
      "type": "string",
      "name": "ConfigurationOptionValueType"
    },
    "OptionRestrictionMinValue": {
      "type": "integer",
      "name": "OptionRestrictionMinValue"
    },
    "InsufficientPrivilegesException": {
      "senderfault": "true",
      "code": "InsufficientPrivilegesException",
      "name": "InsufficientPrivilegesException",
      "doc": [
        "Unable to perform the specified operation because the user does not have enough privileges for one of more downstream aws services"
      ],
      "httpresponsecode": "403",
      "isa": "ElasticBeanstalkServiceException",
      "type": "structure"
    },
    "TooManyBucketsException": {
      "senderfault": "true",
      "code": "TooManyBucketsException",
      "name": "TooManyBucketsException",
      "doc": [
        "The web service attempted to create a bucket in an Amazon S3 account that already has 100 buckets."
      ],
      "httpresponsecode": "400",
      "isa": "ElasticBeanstalkServiceException",
      "type": "structure"
    },
    "TooManyEnvironmentsException": {
      "senderfault": "true",
      "code": "TooManyEnvironmentsException",
      "name": "TooManyEnvironmentsException",
      "doc": [
        "The caller has exceeded the limit of allowed environments associated with the account."
      ],
      "httpresponsecode": "400",
      "isa": "ElasticBeanstalkServiceException",
      "type": "structure"
    },
    "Trigger": {
      "doc": [
        "Describes a trigger."
      ],
      "type": "structure",
      "name": "Trigger",
      "members": [
        {
          "doc": [
            "The name of the trigger."
          ],
          "type": "member",
          "name": "Name",
          "target": "ResourceId"
        }
      ]
    },
    "CreateEnvironmentMessage": {
      "doc": [
        "<p/>"
      ],
      "type": "structure",
      "name": "CreateEnvironmentMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application that contains the version to be deployed.",
            "If no application is found with this name, <code>CreateEnvironment</code> returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "The name of the application version to deploy.",
            "If the specified application has no associated application versions, AWS Elastic Beanstalk <code>UpdateEnvironment</code> returns an <code>InvalidParameterValue</code> error.",
            "Default: If not specified, AWS Elastic Beanstalk attempts to launch the most recently created application version."
          ],
          "type": "member",
          "name": "VersionLabel",
          "target": "VersionLabel"
        },
        {
          "name": "EnvironmentName",
          "doc": [
            "A unique name for the deployment environment. Used in the application URL.",
            "Constraint: Must be from 4 to 23 characters in length. The name can contain only letters, numbers, and hyphens. It cannot start or end with a hyphen. This name must be unique in your account. If the specified name already exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.",
            "Default: If the CNAME parameter is not specified, the environment name becomes part of the CNAME, and therefore part of the visible URL for your application."
          ],
          "required": true,
          "type": "member",
          "target": "EnvironmentName"
        },
        {
          "doc": [
            "The name of the configuration template to use in deployment. If no configuration template is found with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.",
            "Condition: You must specify either this parameter or a <code>SolutionStackName</code>, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "TemplateName",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "This is an alternative to specifying a configuration name. If specified, AWS Elastic Beanstalk sets the configuration values to the default values associated with the specified solution stack.",
            "Condition: You must specify either this or a <code>TemplateName</code>, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "SolutionStackName",
          "target": "SolutionStackName"
        },
        {
          "doc": [
            "If specified, the environment attempts to use this value as the prefix for the CNAME. If not specified, the environment uses the environment name."
          ],
          "type": "member",
          "name": "CNAMEPrefix",
          "target": "DNSCnamePrefix"
        },
        {
          "doc": [
            "Describes this environment."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk sets the specified configuration options to the requested value in the configuration set for the new environment. These override the values obtained from the solution stack or the configuration template."
          ],
          "type": "member",
          "name": "OptionSettings",
          "target": "ConfigurationOptionSettingsList"
        },
        {
          "doc": [
            "A list of custom user-defined configuration options to remove from the configuration set for this new environment."
          ],
          "type": "member",
          "name": "OptionsToRemove",
          "target": "OptionsSpecifierList"
        }
      ]
    },
    "DescribeEnvironmentsMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "DescribeEnvironmentsMessage",
      "members": [
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application."
          ],
          "type": "member",
          "name": "ApplicationName",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version."
          ],
          "type": "member",
          "name": "VersionLabel",
          "target": "VersionLabel"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs."
          ],
          "type": "member",
          "name": "EnvironmentIds",
          "target": "EnvironmentIdList"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names."
          ],
          "type": "member",
          "name": "EnvironmentNames",
          "target": "EnvironmentNamesList"
        },
        {
          "doc": [
            "Indicates whether to include deleted environments:",
            "<code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.",
            "<code>false</code>: Do not include deleted environments."
          ],
          "type": "member",
          "name": "IncludeDeleted",
          "target": "IncludeDeleted"
        },
        {
          "doc": [
            "If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed."
          ],
          "type": "member",
          "name": "IncludedDeletedBackTo",
          "target": "IncludeDeletedBackTo"
        }
      ]
    },
    "CheckDNSAvailabilityResultMessage": {
      "doc": [
        "Indicates if the specified CNAME is available."
      ],
      "type": "structure",
      "name": "CheckDNSAvailabilityResultMessage",
      "members": [
        {
          "doc": [
            "Indicates if the specified CNAME is available:",
            "<code>true</code> : The CNAME is available.",
            "<code>true</code> : The CNAME is not available.",
            "<ul> <li> <code>true</code> : The CNAME is available. </li> <li> <code>false</code> : The CNAME is not available. </li> </ul>"
          ],
          "type": "member",
          "name": "Available",
          "target": "CnameAvailability"
        },
        {
          "doc": [
            "The fully qualified CNAME to reserve when <a>CreateEnvironment</a> is called with the provided prefix."
          ],
          "type": "member",
          "name": "FullyQualifiedCNAME",
          "target": "DNSCname"
        }
      ]
    },
    "ConfigurationOptionName": {
      "type": "string",
      "name": "ConfigurationOptionName"
    },
    "EnvironmentName": {
      "max": 23,
      "type": "string",
      "name": "EnvironmentName",
      "min": 4
    },
    "RegexLabel": {
      "type": "string",
      "name": "RegexLabel"
    },
    "EnvironmentInfoType": {
      "type": "string",
      "name": "EnvironmentInfoType"
    },
    "EnvironmentStatus": {
      "type": "string",
      "name": "EnvironmentStatus"
    },
    "EnvironmentResourceDescriptionsMessage": {
      "doc": [
        "Result message containing a list of environment resource descriptions."
      ],
      "type": "structure",
      "name": "EnvironmentResourceDescriptionsMessage",
      "members": [
        {
          "doc": [
            "A list of <a>EnvironmentResourceDescription</a>."
          ],
          "type": "member",
          "name": "EnvironmentResources",
          "target": "EnvironmentResourceDescription"
        }
      ]
    },
    "ValidationMessageString": {
      "type": "string",
      "name": "ValidationMessageString"
    },
    "ValidationMessagesList": {
      "type": "list",
      "name": "ValidationMessagesList",
      "member_type": "ValidationMessage"
    },
    "CheckDNSAvailabilityMessage": {
      "doc": [
        "Results message indicating whether a CNAME is available."
      ],
      "type": "structure",
      "name": "CheckDNSAvailabilityMessage",
      "members": [
        {
          "name": "CNAMEPrefix",
          "doc": [
            "The prefix used when this CNAME is reserved."
          ],
          "required": true,
          "type": "member",
          "target": "DNSCnamePrefix"
        }
      ]
    },
    "CreateConfigurationTemplateMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "CreateConfigurationTemplateMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application to associate with this configuration template. If no application is found with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "name": "TemplateName",
          "doc": [
            "The name of the configuration template.",
            "Constraint: This name must be unique per application.",
            "Default: If a configuration template already exists with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "The name of the solution stack used by this configuration. The solution stack specifies the operating system, architecture, and application server for a configuration template. It determines the set of configuration options as well as the possible and default values.",
            "Use <a>ListAvailableSolutionStacks</a> to obtain a list of available solution stacks.",
            "Default: If the <code>SolutionStackName</code> is not specified and the source configuration parameter is blank, AWS Elastic Beanstalk uses the default solution stack.",
            "If not specified and the source configuration parameter is specified, AWS Elastic Beanstalk uses the same solution stack as the source configuration template."
          ],
          "type": "member",
          "name": "SolutionStackName",
          "target": "SolutionStackName"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk uses the configuration values from the specified configuration template to create a new configuration.",
            "Values specified in the <code>OptionSettings</code> parameter of this call overrides any values obtained from the <code>SourceConfiguration</code>.",
            "If no configuration template is found, returns an <code>InvalidParameterValue</code> error.",
            "Constraint: If both the solution stack name parameter and the source configuration parameters are specified, the solution stack of the source configuration template must match the specified solution stack name or else AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error."
          ],
          "type": "member",
          "name": "SourceConfiguration",
          "target": "SourceConfiguration"
        },
        {
          "doc": [
            "The ID of the environment used with this configuration template."
          ],
          "type": "member",
          "name": "EnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "Describes this configuration."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk sets the specified configuration option to the requested value. The new value overrides the value obtained from the solution stack or the source configuration template."
          ],
          "type": "member",
          "name": "OptionSettings",
          "target": "ConfigurationOptionSettingsList"
        }
      ]
    },
    "DescribeConfigurationSettingsMessage": {
      "doc": [
        "Result message containing all of the configuration settings for a specified solution stack or configuration template."
      ],
      "type": "structure",
      "name": "DescribeConfigurationSettingsMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The application for the environment or configuration template."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "The name of the configuration template to describe.",
            "Conditional: You must specify either this parameter or an EnvironmentName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "TemplateName",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "The name of the environment to describe.",
            "Condition: You must specify either this or a TemplateName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        }
      ]
    },
    "Ec2InstanceId": {
      "type": "string",
      "name": "Ec2InstanceId"
    },
    "LaunchConfigurationList": {
      "type": "list",
      "name": "LaunchConfigurationList",
      "member_type": "LaunchConfiguration"
    },
    "S3LocationNotInServiceRegionException": {
      "senderfault": "true",
      "code": "S3LocationNotInServiceRegionException",
      "name": "S3LocationNotInServiceRegionException",
      "doc": [
        "The specified S3 bucket does not belong to the S3 region in which the service is running."
      ],
      "httpresponsecode": "400",
      "isa": "ElasticBeanstalkServiceException",
      "type": "structure"
    },
    "ConfigurationSettingsDescriptions": {
      "doc": [
        "The results from a request to change the configuration settings of an environment."
      ],
      "type": "structure",
      "name": "ConfigurationSettingsDescriptions",
      "members": [
        {
          "doc": [
            "A list of <a>ConfigurationSettingsDescription</a>."
          ],
          "type": "member",
          "name": "ConfigurationSettings",
          "target": "ConfigurationSettingsDescriptionList"
        }
      ]
    },
    "TerminateEnvironmentResources": {
      "type": "boolean",
      "name": "TerminateEnvironmentResources"
    },
    "EnvironmentNamesList": {
      "type": "list",
      "name": "EnvironmentNamesList",
      "member_type": "EnvironmentName"
    },
    "EventDescriptionsMessage": {
      "doc": [
        "Result message wrapping a list of event descriptions."
      ],
      "type": "structure",
      "name": "EventDescriptionsMessage",
      "members": [
        {
          "doc": [
            "A list of <a>EventDescription</a>."
          ],
          "type": "member",
          "name": "Events",
          "target": "EventDescriptionList"
        },
        {
          "doc": [
            "If returned, this indicates that there are more results to obtain. Use this token in the next <a>DescribeEvents</a> call to get the next batch of events."
          ],
          "type": "member",
          "name": "NextToken",
          "target": "Token"
        }
      ]
    },
    "DescribeApplicationVersionsMessage": {
      "doc": [
        "Result message containing a list of configuration descriptions."
      ],
      "type": "structure",
      "name": "DescribeApplicationVersionsMessage",
      "members": [
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to only include ones that are associated with the specified application."
          ],
          "type": "member",
          "name": "ApplicationName",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "If specified, restricts the returned descriptions to only include ones that have the specified version labels."
          ],
          "type": "member",
          "name": "VersionLabels",
          "target": "VersionLabelsList"
        }
      ]
    },
    "EnvironmentResourceDescription": {
      "doc": [
        "Describes the AWS resources in use by this environment. This data is live."
      ],
      "type": "structure",
      "name": "EnvironmentResourceDescription",
      "members": [
        {
          "doc": [
            "The name of the environment."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "doc": [
            "The <code>AutoScalingGroups</code> used by this environment."
          ],
          "type": "member",
          "name": "AutoScalingGroups",
          "target": "AutoScalingGroupList"
        },
        {
          "doc": [
            "The Amazon EC2 instances used by this environment."
          ],
          "type": "member",
          "name": "Instances",
          "target": "InstanceList"
        },
        {
          "doc": [
            "The Auto Scaling launch configurations in use by this environment."
          ],
          "type": "member",
          "name": "LaunchConfigurations",
          "target": "LaunchConfigurationList"
        },
        {
          "doc": [
            "The LoadBalancers in use by this environment."
          ],
          "type": "member",
          "name": "LoadBalancers",
          "target": "LoadBalancerList"
        },
        {
          "doc": [
            "The <code>AutoScaling</code> triggers in use by this environment."
          ],
          "type": "member",
          "name": "Triggers",
          "target": "TriggerList"
        }
      ]
    },
    "ConfigurationTemplateName": {
      "max": 100,
      "type": "string",
      "name": "ConfigurationTemplateName",
      "min": 1
    },
    "AutoScalingGroupList": {
      "type": "list",
      "name": "AutoScalingGroupList",
      "member_type": "AutoScalingGroup"
    },
    "SourceConfiguration": {
      "doc": [
        "A specification for an environment configuration"
      ],
      "type": "structure",
      "name": "SourceConfiguration",
      "members": [
        {
          "doc": [
            "The name of the application associated with the configuration."
          ],
          "type": "member",
          "name": "ApplicationName",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "The name of the configuration template."
          ],
          "type": "member",
          "name": "TemplateName",
          "target": "ConfigurationTemplateName"
        }
      ]
    },
    "EnvironmentDescription": {
      "doc": [
        "Describes the properties of an environment."
      ],
      "type": "structure",
      "name": "EnvironmentDescription",
      "members": [
        {
          "doc": [
            "The name of this environment."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "doc": [
            "The ID of this environment."
          ],
          "type": "member",
          "name": "EnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "The name of the application associated with this environment."
          ],
          "type": "member",
          "name": "ApplicationName",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "The application version deployed in this environment."
          ],
          "type": "member",
          "name": "VersionLabel",
          "target": "VersionLabel"
        },
        {
          "doc": [
            "The name of the <code>SolutionStack</code> deployed with this environment."
          ],
          "type": "member",
          "name": "SolutionStackName",
          "target": "SolutionStackName"
        },
        {
          "doc": [
            "The name of the configuration template used to originally launch this environment."
          ],
          "type": "member",
          "name": "TemplateName",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "Describes this environment."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        },
        {
          "doc": [
            "The URL to the LoadBalancer for this environment."
          ],
          "type": "member",
          "name": "EndpointURL",
          "target": "EndpointURL"
        },
        {
          "doc": [
            "The URL to the CNAME for this environment."
          ],
          "type": "member",
          "name": "CNAME",
          "target": "DNSCname"
        },
        {
          "doc": [
            "The creation date for this environment."
          ],
          "type": "member",
          "name": "DateCreated",
          "target": "CreationDate"
        },
        {
          "doc": [
            "The last modified date for this environment."
          ],
          "type": "member",
          "name": "DateUpdated",
          "target": "UpdateDate"
        },
        {
          "doc": [
            "The current operational status of the environment:"
          ],
          "type": "member",
          "name": "Status",
          "target": "EnvironmentStatus"
        },
        {
          "doc": [
            "Describes the health status of the environment. AWS Elastic Beanstalk indicates the failure levels for a running environment:",
            "<code>Red</code> : Indicates the environment is not working.",
            "<code>Yellow</code>: Indicates that something is wrong, the application might not be available, but the instances appear running.",
            "<code>Green</code>: Indicates the environment is healthy and fully functional.",
            "Default: <code>Grey</code>"
          ],
          "type": "member",
          "name": "Health",
          "target": "EnvironmentHealth"
        },
        {
          "doc": [
            "The description of the AWS resources used by this environment."
          ],
          "type": "member",
          "name": "Resources",
          "target": "EnvironmentResourcesDescription"
        }
      ]
    },
    "ApplicationVersionDescriptionList": {
      "type": "list",
      "name": "ApplicationVersionDescriptionList",
      "member_type": "ApplicationVersionDescription"
    },
    "DescribeEventsMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "DescribeEventsMessage",
      "members": [
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those associated with this application."
          ],
          "type": "member",
          "name": "ApplicationName",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this application version."
          ],
          "type": "member",
          "name": "VersionLabel",
          "target": "VersionLabel"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that are associated with this environment configuration."
          ],
          "type": "member",
          "name": "TemplateName",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment."
          ],
          "type": "member",
          "name": "EnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the described events to include only those associated with this request ID."
          ],
          "type": "member",
          "name": "RequestId",
          "target": "RequestId"
        },
        {
          "doc": [
            "If specified, limits the events returned from this call to include only those with the specified severity or higher."
          ],
          "type": "member",
          "name": "Severity",
          "target": "EventSeverity"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur on or after this time."
          ],
          "type": "member",
          "name": "StartTime",
          "target": "TimeFilterStart"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur up to, but not including, the <code>EndTime</code>."
          ],
          "type": "member",
          "name": "EndTime",
          "target": "TimeFilterEnd"
        },
        {
          "doc": [
            "Specifies the maximum number of events that can be returned, beginning with the most recent event."
          ],
          "type": "member",
          "name": "MaxRecords",
          "target": "MaxRecords"
        },
        {
          "doc": [
            "Pagination token. If specified, the events return the next batch of results."
          ],
          "type": "member",
          "name": "NextToken",
          "target": "Token"
        }
      ]
    },
    "RegexPattern": {
      "type": "string",
      "name": "RegexPattern"
    },
    "DNSCnamePrefix": {
      "max": 63,
      "type": "string",
      "name": "DNSCnamePrefix",
      "min": 4
    },
    "ExceptionMessage": {
      "type": "string",
      "name": "ExceptionMessage"
    },
    "ConfigurationSettingsDescriptionList": {
      "type": "list",
      "name": "ConfigurationSettingsDescriptionList",
      "member_type": "ConfigurationSettingsDescription"
    },
    "ConfigurationOptionDescription": {
      "doc": [
        "Describes the possible values for a configuration option."
      ],
      "type": "structure",
      "name": "ConfigurationOptionDescription",
      "members": [
        {
          "doc": [
            "A unique namespace identifying the option's associated AWS resource."
          ],
          "type": "member",
          "name": "Namespace",
          "target": "OptionNamespace"
        },
        {
          "doc": [
            "The name of the configuration option."
          ],
          "type": "member",
          "name": "Name",
          "target": "ConfigurationOptionName"
        },
        {
          "doc": [
            "The default value for this configuration option."
          ],
          "type": "member",
          "name": "DefaultValue",
          "target": "ConfigurationOptionDefaultValue"
        },
        {
          "doc": [
            "An indication of which action is required if the value for this configuration option changes:",
            "NoInterruption - There is no interruption to the environment or application availability.",
            "RestartEnvironment - The environment is restarted, all AWS resources are deleted and recreated, and the environment is unavailable during the process.",
            "RestartApplicationServer - The environment is available the entire time. However, a short application outage occurs when the application servers on the running Amazon EC2 instances are restarted."
          ],
          "type": "member",
          "name": "ChangeSeverity",
          "target": "ConfigurationOptionSeverity"
        },
        {
          "doc": [
            "An indication of whether the user defined this configuration option:",
            "<code>true</code> : This configuration option was defined by the user. It is a valid choice for specifying this as an Option to Remove when updating configuration settings.",
            "<code>false</code> : This configuration was not defined by the user.",
            "<code>true</code> : This configuration option was defined by the user. It is a valid choice for specifying if this as an <code>Option to Remove</code> when updating configuration settings.",
            "Constraint: You can remove only <code>UserDefined</code> options from a configuration.",
            "Valid Values: <code>true</code> | <code>false</code>"
          ],
          "type": "member",
          "name": "UserDefined",
          "target": "UserDefinedOption"
        },
        {
          "doc": [
            "An indication of which type of values this option has and whether it is allowable to select one or more than one of the possible values:",
            "<code>Scalar</code> : Values for this option are a single selection from the possible values, or a unformatted string or numeric value governed by the MIN/MAX/Regex constraints:",
            "<code>List</code> : Values for this option are multiple selections of the possible values.",
            "<code>Boolean</code> : Values for this option are either <code>true</code> or <code>false</code> .",
            "<ul> <li> <code>Scalar</code> : Values for this option are a single selection from the possible values, or an unformatted string, or numeric value governed by the <code>MIN/MAX/Regex</code> constraints. </li> <li> <code>List</code> : Values for this option are multiple selections from the possible values. </li> <li> <code>Boolean</code> : Values for this option are either <code>true</code> or <code>false</code> . </li> </ul>"
          ],
          "type": "member",
          "name": "ValueType",
          "target": "ConfigurationOptionValueType"
        },
        {
          "doc": [
            "If specified, values for the configuration option are selected from this list."
          ],
          "type": "member",
          "name": "ValueOptions",
          "target": "ConfigurationOptionPossibleValues"
        },
        {
          "doc": [
            "If specified, the configuration option must be a numeric value greater than this value."
          ],
          "type": "member",
          "name": "MinValue",
          "target": "OptionRestrictionMinValue"
        },
        {
          "doc": [
            "If specified, the configuration option must be a numeric value less than this value."
          ],
          "type": "member",
          "name": "MaxValue",
          "target": "OptionRestrictionMaxValue"
        },
        {
          "doc": [
            "If specified, the configuration option must be a string value no longer than this value."
          ],
          "type": "member",
          "name": "MaxLength",
          "target": "OptionRestrictionMaxLength"
        },
        {
          "doc": [
            "If specified, the configuration option must be a string value that satisfies this regular expression."
          ],
          "type": "member",
          "name": "Regex",
          "target": "OptionRestrictionRegex"
        }
      ]
    },
    "EnvironmentInfoDescriptionList": {
      "type": "list",
      "name": "EnvironmentInfoDescriptionList",
      "member_type": "EnvironmentInfoDescription"
    },
    "OperationInProgressException": {
      "senderfault": "true",
      "code": "OperationInProgressFailure",
      "name": "OperationInProgressException",
      "doc": [
        "Unable to perform the specified operation because another operation is already in progress affecting an an element in this activity."
      ],
      "httpresponsecode": "400",
      "isa": "ElasticBeanstalkServiceException",
      "type": "structure"
    },
    "CreateStorageLocationResultMessage": {
      "doc": [
        "Results of a <a>CreateStorageLocationResult</a> call."
      ],
      "type": "structure",
      "name": "CreateStorageLocationResultMessage",
      "members": [
        {
          "doc": [
            "The name of the Amazon S3 bucket created."
          ],
          "type": "member",
          "name": "S3Bucket",
          "target": "S3Bucket"
        }
      ]
    },
    "OptionSpecification": {
      "doc": [
        "A specification identifying an individual configuration option."
      ],
      "type": "structure",
      "name": "OptionSpecification",
      "members": [
        {
          "doc": [
            "A unique namespace identifying the option's associated AWS resource."
          ],
          "type": "member",
          "name": "Namespace",
          "target": "OptionNamespace"
        },
        {
          "doc": [
            "The name of the configuration option."
          ],
          "type": "member",
          "name": "OptionName",
          "target": "ConfigurationOptionName"
        }
      ]
    },
    "SolutionStackFileTypeList": {
      "type": "list",
      "name": "SolutionStackFileTypeList",
      "member_type": "FileTypeExtension"
    },
    "OptionRestrictionMaxLength": {
      "type": "integer",
      "name": "OptionRestrictionMaxLength"
    },
    "UserDefinedOption": {
      "type": "boolean",
      "name": "UserDefinedOption"
    },
    "AutoScalingGroup": {
      "doc": [
        "Describes an Auto Scaling launch configuration."
      ],
      "type": "structure",
      "name": "AutoScalingGroup",
      "members": [
        {
          "doc": [
            "The name of the <code>AutoScalingGroup</code> ."
          ],
          "type": "member",
          "name": "Name",
          "target": "ResourceId"
        }
      ]
    },
    "ApplicationVersionDescriptionMessage": {
      "doc": [
        "Result message wrapping a single description of an application version."
      ],
      "type": "structure",
      "name": "ApplicationVersionDescriptionMessage",
      "members": [
        {
          "doc": [
            "The <a>ApplicationVersionDescription</a> of the application version."
          ],
          "type": "member",
          "name": "ApplicationVersion",
          "target": "ApplicationVersionDescription"
        }
      ]
    },
    "DescribeEnvironmentResourcesMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "DescribeEnvironmentResourcesMessage",
      "members": [
        {
          "doc": [
            "The ID of the environment to retrieve AWS resource usage data.",
            "Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentId",
          "target": "EnvironmentId",
	  "mutex_group_required": "IdOrName"
        },
        {
          "doc": [
            "The name of the environment to retrieve AWS resource usage data.",
            "Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName",
	  "mutex_group_required": "IdOrName"
        }
      ]
    },
    "DescribeConfigurationOptionsMessage": {
      "doc": [
        "Result message containig a list of application version descriptions."
      ],
      "type": "structure",
      "name": "DescribeConfigurationOptionsMessage",
      "members": [
        {
          "doc": [
            "The name of the application associated with the configuration template or environment. Only needed if you want to describe the configuration options associated with either the configuration template or environment."
          ],
          "type": "member",
          "name": "ApplicationName",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "The name of the configuration template whose configuration options you want to describe."
          ],
          "type": "member",
          "name": "TemplateName",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "The name of the environment whose configuration options you want to describe."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "doc": [
            "The name of the solution stack whose configuration options you want to describe."
          ],
          "type": "member",
          "name": "SolutionStackName",
          "target": "SolutionStackName"
        },
        {
          "doc": [
            "If specified, restricts the descriptions to only the specified options."
          ],
          "type": "member",
          "name": "Options",
          "target": "OptionsSpecifierList"
        }
      ]
    },
    "EnvironmentIdList": {
      "type": "list",
      "name": "EnvironmentIdList",
      "member_type": "EnvironmentId"
    },
    "RetrieveEnvironmentInfoMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "RetrieveEnvironmentInfoMessage",
      "members": [
        {
          "doc": [
            "The ID of the data's environment.",
            "If no such environment is found, returns an <code>InvalidParameterValue</code> error.",
            "Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "The name of the data's environment.",
            "If no such environment is found, returns an <code>InvalidParameterValue</code> error.",
            "Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "name": "InfoType",
          "doc": [
            "The type of information to retrieve."
          ],
          "required": true,
          "type": "member",
          "target": "EnvironmentInfoType"
        }
      ]
    },
    "CreateApplicationMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "CreateApplicationMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application.",
            "Constraint: This name must be unique within your account. If the specified name already exists, the action returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "Describes the application."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        }
      ]
    },
    "String": {
      "type": "string",
      "name": "String"
    },
    "EventDescription": {
      "doc": [
        "Describes an event."
      ],
      "type": "structure",
      "name": "EventDescription",
      "members": [
        {
          "doc": [
            "The date when the event occurred."
          ],
          "type": "member",
          "name": "EventDate",
          "target": "EventDate"
        },
        {
          "doc": [
            "The event message."
          ],
          "type": "member",
          "name": "Message",
          "target": "EventMessage"
        },
        {
          "doc": [
            "The application associated with the event."
          ],
          "type": "member",
          "name": "ApplicationName",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "The release label for the application version associated with this event."
          ],
          "type": "member",
          "name": "VersionLabel",
          "target": "VersionLabel"
        },
        {
          "doc": [
            "The name of the configuration associated with this event."
          ],
          "type": "member",
          "name": "TemplateName",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "The name of the environment associated with this event."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "doc": [
            "The web service request ID for the activity of this event."
          ],
          "type": "member",
          "name": "RequestId",
          "target": "RequestId"
        },
        {
          "doc": [
            "The severity level of this event."
          ],
          "type": "member",
          "name": "Severity",
          "target": "EventSeverity"
        }
      ]
    },
    "TooManyApplicationVersionsException": {
      "doc": [
        "The caller has exceeded the limit on the number of application versions associated with their account."
      ],
      "type": "structure",
      "isa": "ElasticBeanstalkServiceException",
      "name": "TooManyApplicationVersionsException"
    },
    "InstanceList": {
      "type": "list",
      "name": "InstanceList",
      "member_type": "Instance"
    },
    "Listener": {
      "doc": [
        "Describes the properties of a Listener for the LoadBalancer."
      ],
      "type": "structure",
      "name": "Listener",
      "members": [
        {
          "doc": [
            "The protocol that is used by the Listener."
          ],
          "type": "member",
          "name": "Protocol",
          "target": "String"
        },
        {
          "doc": [
            "The port that is used by the Listener."
          ],
          "type": "member",
          "name": "Port",
          "target": "Integer"
        }
      ]
    },
    "EventSeverity": {
      "type": "string",
      "name": "EventSeverity"
    },
    "AvailableSolutionStackNamesList": {
      "type": "list",
      "name": "AvailableSolutionStackNamesList",
      "member_type": "SolutionStackName"
    },
    "TimeFilterEnd": {
      "type": "timestamp",
      "name": "TimeFilterEnd"
    },
    "LoadBalancerList": {
      "type": "list",
      "name": "LoadBalancerList",
      "member_type": "LoadBalancer"
    },
    "ConfigurationTemplateNamesList": {
      "type": "list",
      "name": "ConfigurationTemplateNamesList",
      "member_type": "ConfigurationTemplateName"
    },
    "TimeFilterStart": {
      "type": "timestamp",
      "name": "TimeFilterStart"
    },
    "ApplicationName": {
      "max": 100,
      "type": "string",
      "name": "ApplicationName",
      "min": 1
    },
    "LoadBalancerListenersDescription": {
      "type": "list",
      "name": "LoadBalancerListenersDescription",
      "member_type": "Listener"
    },
    "CreateApplicationVersionMessage": {
      "doc": [
        "<p/>"
      ],
      "type": "structure",
      "name": "CreateApplicationVersionMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application. If no application is found with this name, and <code>AutoCreateApplication</code> is <code>false</code>, returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "name": "VersionLabel",
          "doc": [
            "A label identifying this version.",
            "Constraint: Must be unique per application. If an application version already exists with this label for the specified application, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "VersionLabel"
        },
        {
          "doc": [
            "Describes this version."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        },
        {
          "doc": [
            "The Amazon S3 bucket and key that identify the location of the source bundle for this version.",
            "If data found at the Amazon S3 location exceeds the maximum allowed source bundle size, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.",
            "Default: If not specified, AWS Elastic Beanstalk uses a sample application. If only partially specified (for example, a bucket is provided but not the key) or if no data is found at the Amazon S3 location, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error."
          ],
          "type": "member",
          "name": "SourceBundle",
          "target": "S3Location"
        },
        {
          "doc": [
            "Determines how the system behaves if the specified application for this version does not already exist:",
            "<code>true</code>: Automatically creates the specified application for this version if it does not already exist.",
            "<code>false</code>: Returns an <code>InvalidParameterValue</code> if the specified application for this version does not already exist.",
            "Default: <code>false</code>",
            "Valid Values: <code>true</code> | <code>false</code>"
          ],
          "type": "member",
          "name": "AutoCreateApplication",
          "target": "AutoCreateApplication"
        }
      ]
    },
    "ApplicationVersionDescriptionsMessage": {
      "doc": [
        "Result message wrapping a list of application version descriptions."
      ],
      "type": "structure",
      "name": "ApplicationVersionDescriptionsMessage",
      "members": [
        {
          "doc": [
            "A list of <a>ApplicationVersionDescription</a> ."
          ],
          "type": "member",
          "name": "ApplicationVersions",
          "target": "ApplicationVersionDescriptionList"
        }
      ]
    },
    "AutoCreateApplication": {
      "type": "boolean",
      "name": "AutoCreateApplication"
    },
    "TerminateEnvironmentMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "TerminateEnvironmentMessage",
      "members": [
        {
          "doc": [
            "The ID of the environment to terminate.",
            "Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "The name of the environment to terminate.",
            "Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "doc": [
            "Indicates whether the associated AWS resources should shut down when the environment is terminated:",
            "<code>true</code>: (default) The user AWS resources (for example, the Auto Scaling group, LoadBalancer, etc.) are terminated along with the environment.",
            "<code>false</code>: The environment is removed from the AWS Elastic Beanstalk but the AWS resources continue to operate.",
            "For more information, see the <a href=\"http://docs.amazonwebservices.com/elasticbeanstalk/latest/ug/\"> AWS Elastic Beanstalk User Guide. </a>",
            "Default: <code>true</code>",
            "Valid Values: <code>true</code> | <code>false</code>"
          ],
          "type": "member",
          "name": "TerminateResources",
          "target": "TerminateEnvironmentResources"
        }
      ]
    },
    "ConfigurationOptionSeverity": {
      "type": "string",
      "name": "ConfigurationOptionSeverity"
    },
    "OptionNamespace": {
      "type": "string",
      "name": "OptionNamespace"
    },
    "EnvironmentHealth": {
      "type": "string",
      "name": "EnvironmentHealth"
    },
    "IncludeDeleted": {
      "type": "boolean",
      "name": "IncludeDeleted"
    },
    "ApplicationVersionDescription": {
      "doc": [
        "Describes the properties of an application version."
      ],
      "type": "structure",
      "name": "ApplicationVersionDescription",
      "members": [
        {
          "doc": [
            "The name of the application associated with this release."
          ],
          "type": "member",
          "name": "ApplicationName",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "The description of this application version."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        },
        {
          "doc": [
            "A label uniquely identifying the version for the associated application."
          ],
          "type": "member",
          "name": "VersionLabel",
          "target": "VersionLabel"
        },
        {
          "doc": [
            "The location where the source bundle is located for this version."
          ],
          "type": "member",
          "name": "SourceBundle",
          "target": "S3Location"
        },
        {
          "doc": [
            "The creation date of the application version."
          ],
          "type": "member",
          "name": "DateCreated",
          "target": "CreationDate"
        },
        {
          "doc": [
            "The last modified date of the application version."
          ],
          "type": "member",
          "name": "DateUpdated",
          "target": "UpdateDate"
        }
      ]
    },
    "OptionRestrictionMaxValue": {
      "type": "integer",
      "name": "OptionRestrictionMaxValue"
    },
    "ListAvailableSolutionStacksResultMessage": {
      "doc": [
        "A list of available AWS Elastic Beanstalk solution stacks."
      ],
      "type": "structure",
      "name": "ListAvailableSolutionStacksResultMessage",
      "members": [
        {
          "doc": [
            "A list of available solution stacks."
          ],
          "type": "member",
          "name": "SolutionStacks",
          "target": "AvailableSolutionStackNamesList"
        },
        {
          "doc": [
            "A list of available solution stacks and their <a>SolutionStackDescription</a>."
          ],
          "type": "member",
          "name": "SolutionStackDetails",
          "target": "AvailableSolutionStackDetailsList"
        }
      ]
    },
    "ConfigurationOptionValue": {
      "type": "string",
      "name": "ConfigurationOptionValue"
    },
    "ApplicationDescriptionsMessage": {
      "doc": [
        "Result message containing a list of application descriptions."
      ],
      "type": "structure",
      "name": "ApplicationDescriptionsMessage",
      "members": [
        {
          "doc": [
            "This parameter contains a list of <a>ApplicationDescription</a>."
          ],
          "type": "member",
          "name": "Applications",
          "target": "ApplicationDescriptionList"
        }
      ]
    },
    "ConfigurationOptionDescriptionsList": {
      "type": "list",
      "name": "ConfigurationOptionDescriptionsList",
      "member_type": "ConfigurationOptionDescription"
    },
    "FileTypeExtension": {
      "max": 100,
      "type": "string",
      "name": "FileTypeExtension",
      "min": 1
    },
    "DeleteEnvironmentConfigurationMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "DeleteEnvironmentConfigurationMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application the environment is associated with."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "name": "EnvironmentName",
          "doc": [
            "The name of the environment to delete the draft configuration from."
          ],
          "required": true,
          "type": "member",
          "target": "EnvironmentName"
        }
      ]
    },
    "TooManyConfigurationTemplatesException": {
      "senderfault": "true",
      "code": "TooManyConfigurationTemplatesException",
      "name": "TooManyConfigurationTemplatesException",
      "doc": [
        "The caller has exceeded the limit on the number of configuration templates associated with their account."
      ],
      "httpresponsecode": "400",
      "isa": "ElasticBeanstalkServiceException",
      "type": "structure"
    },
    "ApplicationDescriptionList": {
      "type": "list",
      "name": "ApplicationDescriptionList",
      "member_type": "ApplicationDescription"
    },
    "Note": {
      "max": 200,
      "type": "string",
      "name": "Note"
    },
    "Instance": {
      "doc": [
        "The description of an Amazon EC2 instance."
      ],
      "type": "structure",
      "name": "Instance",
      "members": [
        {
          "doc": [
            "The ID of the Amazon EC2 instance."
          ],
          "type": "member",
          "name": "Id",
          "target": "ResourceId"
        }
      ]
    },
    "RebuildEnvironmentMessage": {
      "doc": [
        "<p/>"
      ],
      "type": "structure",
      "name": "RebuildEnvironmentMessage",
      "members": [
        {
          "doc": [
            "The ID of the environment to rebuild.",
            "Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "The name of the environment to rebuild.",
            "Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        }
      ]
    },
    "IncludeDeletedBackTo": {
      "type": "timestamp",
      "name": "IncludeDeletedBackTo"
    },
    "ConfigurationOptionPossibleValue": {
      "type": "string",
      "name": "ConfigurationOptionPossibleValue"
    },
    "ConfigurationSettingsValidationMessages": {
      "doc": [
        "Provides a list of validation messages."
      ],
      "type": "structure",
      "name": "ConfigurationSettingsValidationMessages",
      "members": [
        {
          "doc": [
            "A list of <a>ValidationMessage</a>."
          ],
          "type": "member",
          "name": "Messages",
          "target": "ValidationMessagesList"
        }
      ]
    },
    "VersionLabelsList": {
      "type": "list",
      "name": "VersionLabelsList",
      "member_type": "VersionLabel"
    },
    "S3SubscriptionRequiredException": {
      "senderfault": "true",
      "code": "S3SubscriptionRequiredException",
      "name": "S3SubscriptionRequiredException",
      "doc": [
        "The caller does not have a subscription to Amazon S3."
      ],
      "httpresponsecode": "400",
      "isa": "ElasticBeanstalkServiceException",
      "type": "structure"
    },
    "TerminateEnvForce": {
      "type": "boolean",
      "name": "TerminateEnvForce"
    },
    "DeleteApplicationVersionMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "DeleteApplicationVersionMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application to delete releases from."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "name": "VersionLabel",
          "doc": [
            "The label of the version to delete."
          ],
          "required": true,
          "type": "member",
          "target": "VersionLabel"
        },
        {
          "doc": [
            "Indicates whether to delete the associated source bundle from Amazon S3:",
            "Valid Values: <code>true</code> | <code>false</code>"
          ],
          "type": "member",
          "name": "DeleteSourceBundle",
          "target": "DeleteSourceBundle"
        }
      ]
    },
    "ConfigurationDeploymentStatus": {
      "type": "string",
      "name": "ConfigurationDeploymentStatus"
    },
    "OptionsSpecifierList": {
      "type": "list",
      "name": "OptionsSpecifierList",
      "member_type": "OptionSpecification"
    },
    "ConfigurationOptionPossibleValues": {
      "type": "list",
      "name": "ConfigurationOptionPossibleValues",
      "member_type": "ConfigurationOptionPossibleValue"
    },
    "UpdateApplicationMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "UpdateApplicationMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application to update. If no such application is found, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "A new description for the application.",
            "Default: If not specified, AWS Elastic Beanstalk does not update the description."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        }
      ]
    },
    "Integer": {
      "type": "integer",
      "name": "Integer"
    },
    "EnvironmentDescriptionsList": {
      "type": "list",
      "name": "EnvironmentDescriptionsList",
      "member_type": "EnvironmentDescription"
    },
    "RetrieveEnvironmentInfoResultMessage": {
      "doc": [
        "Result message containing a description of the requested environment info."
      ],
      "type": "structure",
      "name": "RetrieveEnvironmentInfoResultMessage",
      "members": [
        {
          "doc": [
            "The <a>EnvironmentInfoDescription</a> of the environment."
          ],
          "type": "member",
          "name": "EnvironmentInfo",
          "target": "EnvironmentInfoDescriptionList"
        }
      ]
    },
    "ApplicationDescription": {
      "doc": [
        "Describes the properties of an application."
      ],
      "type": "structure",
      "name": "ApplicationDescription",
      "members": [
        {
          "doc": [
            "The name of the application."
          ],
          "type": "member",
          "name": "ApplicationName",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "User-defined description of the application."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        },
        {
          "doc": [
            "The date when the application was created."
          ],
          "type": "member",
          "name": "DateCreated",
          "target": "CreationDate"
        },
        {
          "doc": [
            "The date when the application was last modified."
          ],
          "type": "member",
          "name": "DateUpdated",
          "target": "UpdateDate"
        },
        {
          "doc": [
            "The names of the versions for this application."
          ],
          "type": "member",
          "name": "Versions",
          "target": "VersionLabelsList"
        },
        {
          "doc": [
            "The names of the configuration templates associated with this application."
          ],
          "type": "member",
          "name": "ConfigurationTemplates",
          "target": "ConfigurationTemplateNamesList"
        }
      ]
    },
    "DeleteSourceBundle": {
      "type": "boolean",
      "name": "DeleteSourceBundle"
    },
    "RequestId": {
      "type": "string",
      "name": "RequestId"
    },
    "LaunchConfiguration": {
      "doc": [
        "Describes an Auto Scaling launch configuration."
      ],
      "type": "structure",
      "name": "LaunchConfiguration",
      "members": [
        {
          "doc": [
            "The name of the launch configuration."
          ],
          "type": "member",
          "name": "Name",
          "target": "ResourceId"
        }
      ]
    },
    "DescribeApplicationsMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "DescribeApplicationsMessage",
      "members": [
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk restricts the returned descriptions to only include those with the specified names."
          ],
          "type": "member",
          "name": "ApplicationNames",
          "target": "ApplicationNamesList"
        }
      ]
    },
    "ConfigurationOptionSettingsList": {
      "type": "list",
      "name": "ConfigurationOptionSettingsList",
      "member_type": "ConfigurationOptionSetting"
    },
    "DeleteApplicationMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "DeleteApplicationMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application to delete."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "When set to true, running environments will be terminated before deleting the application."
          ],
          "type": "member",
          "name": "TerminateEnvByForce",
          "target": "TerminateEnvForce"
        }
      ]
    },
    "EnvironmentId": {
      "type": "string",
      "name": "EnvironmentId"
    },
    "Token": {
      "type": "string",
      "name": "Token"
    },
    "ConfigurationSettingsDescription": {
      "doc": [
        "Describes the settings for a configuration set."
      ],
      "type": "structure",
      "name": "ConfigurationSettingsDescription",
      "members": [
        {
          "doc": [
            "The name of the solution stack this configuration set uses."
          ],
          "type": "member",
          "name": "SolutionStackName",
          "target": "SolutionStackName"
        },
        {
          "doc": [
            "The name of the application associated with this configuration set."
          ],
          "type": "member",
          "name": "ApplicationName",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "If not <code>null</code>, the name of the configuration template for this configuration set."
          ],
          "type": "member",
          "name": "TemplateName",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "Describes this configuration set."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        },
        {
          "doc": [
            "If not <code>null</code>, the name of the environment for this configuration set."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "doc": [
            "If this configuration set is associated with an environment, the <code>DeploymentStatus</code> parameter indicates the deployment status of this configuration set:",
            "<code>null</code>: This configuration is not associated with a running environment.",
            "<code>pending</code>: This is a draft configuration that is not deployed to the associated environment but is in the process of deploying.",
            "<code>deployed</code>: This is the configuration that is currently deployed to the associated running environment.",
            "<code>failed</code>: This is a draft configuration, that failed to successfully deploy."
          ],
          "type": "member",
          "name": "DeploymentStatus",
          "target": "ConfigurationDeploymentStatus"
        },
        {
          "doc": [
            "The date (in UTC time) when this configuration set was created."
          ],
          "type": "member",
          "name": "DateCreated",
          "target": "CreationDate"
        },
        {
          "doc": [
            "The date (in UTC time) when this configuration set was last modified."
          ],
          "type": "member",
          "name": "DateUpdated",
          "target": "UpdateDate"
        },
        {
          "doc": [
            "A list of the configuration options and their values in this configuration set."
          ],
          "type": "member",
          "name": "OptionSettings",
          "target": "ConfigurationOptionSettingsList"
        }
      ]
    },
    "Long": {
      "type": "long",
      "name": "Long"
    },
    "S3Key": {
      "max": 1024,
      "type": "string",
      "name": "S3Key"
    },
    "SourceBundleDeletionException": {
      "senderfault": "true",
      "code": "SourceBundleDeletionFailure",
      "name": "SourceBundleDeletionException",
      "doc": [
        "Unable to delete the Amazon S3 source bundle associated with the application version, although the application version deleted successfully."
      ],
      "httpresponsecode": "400",
      "isa": "ElasticBeanstalkServiceException",
      "type": "structure"
    },
    "ConfigurationOptionDefaultValue": {
      "type": "string",
      "name": "ConfigurationOptionDefaultValue"
    },
    "UpdateApplicationVersionMessage": {
      "doc": [
        "<p/>"
      ],
      "type": "structure",
      "name": "UpdateApplicationVersionMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application associated with this version.",
            "If no application is found with this name, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "name": "VersionLabel",
          "doc": [
            "The name of the version to update.",
            "If no application version is found with this label, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "VersionLabel"
        },
        {
          "doc": [
            "A new description for this release."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        }
      ]
    },
    "ValidateConfigurationSettingsMessage": {
      "doc": [
        "A list of validation messages for a specified configuration template."
      ],
      "type": "structure",
      "name": "ValidateConfigurationSettingsMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application that the configuration template or environment belongs to."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "doc": [
            "The name of the configuration template to validate the settings against.",
            "Condition: You cannot specify both this and an environment name."
          ],
          "type": "member",
          "name": "TemplateName",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "The name of the environment to validate the settings against.",
            "Condition: You cannot specify both this and a configuration template name."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "name": "OptionSettings",
          "doc": [
            "A list of the options and desired values to evaluate."
          ],
          "required": true,
          "type": "member",
          "target": "ConfigurationOptionSettingsList"
        }
      ]
    },
    "DNSCname": {
      "max": 255,
      "type": "string",
      "name": "DNSCname",
      "min": 1
    },
    "SwapEnvironmentCNAMEsMessage": {
      "doc": [
        "<p/>"
      ],
      "type": "structure",
      "name": "SwapEnvironmentCNAMEsMessage",
      "members": [
        {
          "doc": [
            "The ID of the source environment.",
            "Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentId</code>, you must specify the <code>DestinationEnvironmentId</code>."
          ],
          "type": "member",
          "name": "SourceEnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "The name of the source environment.",
            "Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentName</code>, you must specify the <code>DestinationEnvironmentName</code>."
          ],
          "type": "member",
          "name": "SourceEnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "doc": [
            "The ID of the destination environment.",
            "Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentId</code> with the <code>DestinationEnvironmentId</code>."
          ],
          "type": "member",
          "name": "DestinationEnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "The name of the destination environment.",
            "Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentName</code> with the <code>DestinationEnvironmentName</code>."
          ],
          "type": "member",
          "name": "DestinationEnvironmentName",
          "target": "EnvironmentName"
        }
      ]
    },
    "ConfigurationOptionsDescription": {
      "doc": [
        "Describes the settings for a specified configuration set."
      ],
      "type": "structure",
      "name": "ConfigurationOptionsDescription",
      "members": [
        {
          "doc": [
            "The name of the solution stack these configuration options belong to."
          ],
          "type": "member",
          "name": "SolutionStackName",
          "target": "SolutionStackName"
        },
        {
          "doc": [
            "A list of <a>ConfigurationOptionDescription</a>."
          ],
          "type": "member",
          "name": "Options",
          "target": "ConfigurationOptionDescriptionsList"
        }
      ]
    },
    "ElasticBeanstalkServiceException": {
      "type": "structure",
      "name": "ElasticBeanstalkServiceException",
      "members": [
        {
          "type": "member",
          "name": "message",
          "target": "ExceptionMessage"
        }
      ]
    },
    "RestartAppServerMessage": {
      "doc": [
        "<p/>"
      ],
      "type": "structure",
      "name": "RestartAppServerMessage",
      "members": [
        {
          "doc": [
            "The ID of the environment to restart the server for.",
            "Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "The name of the environment to restart the server for.",
            "Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        }
      ]
    },
    "Description": {
      "max": 200,
      "type": "string",
      "name": "Description"
    },
    "SampleTimestamp": {
      "type": "timestamp",
      "name": "SampleTimestamp"
    },
    "CnameAvailability": {
      "type": "boolean",
      "name": "CnameAvailability"
    },
    "EnvironmentResourcesDescription": {
      "doc": [
        "Describes the AWS resources in use by this environment. This data is not live data."
      ],
      "type": "structure",
      "name": "EnvironmentResourcesDescription",
      "members": [
        {
          "doc": [
            "Describes the LoadBalancer."
          ],
          "type": "member",
          "name": "LoadBalancer",
          "target": "LoadBalancerDescription"
        }
      ]
    },
    "ResourceId": {
      "type": "string",
      "name": "ResourceId"
    },
    "OptionRestrictionRegex": {
      "doc": [
        "A regular expression representing a restriction on a string configuration option value."
      ],
      "type": "structure",
      "name": "OptionRestrictionRegex",
      "members": [
        {
          "doc": [
            "The regular expression pattern that a string configuration option value with this restriction must match."
          ],
          "type": "member",
          "name": "Pattern",
          "target": "RegexPattern"
        },
        {
          "doc": [
            "A unique name representing this regular expression."
          ],
          "type": "member",
          "name": "Label",
          "target": "RegexLabel"
        }
      ]
    },
    "ValidationSeverity": {
      "type": "string",
      "name": "ValidationSeverity"
    },
    "ApplicationDescriptionMessage": {
      "doc": [
        "Result message containing a single description of an application."
      ],
      "type": "structure",
      "name": "ApplicationDescriptionMessage",
      "members": [
        {
          "doc": [
            "The <a>ApplicationDescription</a> of the application."
          ],
          "type": "member",
          "name": "Application",
          "target": "ApplicationDescription"
        }
      ]
    },
    "MaxRecords": {
      "max": 1000,
      "type": "integer",
      "name": "MaxRecords",
      "min": 1
    },
    "ConfigurationOptionSetting": {
      "doc": [
        "A specification identifying an individual configuration option along with its current value."
      ],
      "type": "structure",
      "name": "ConfigurationOptionSetting",
      "members": [
        {
          "doc": [
            "A unique namespace identifying the option's associated AWS resource."
          ],
          "type": "member",
          "name": "Namespace",
          "target": "OptionNamespace"
        },
        {
          "doc": [
            "The name of the configuration option."
          ],
          "type": "member",
          "name": "OptionName",
          "target": "ConfigurationOptionName"
        },
        {
          "doc": [
            "The current value for the configuration option."
          ],
          "type": "member",
          "name": "Value",
          "target": "ConfigurationOptionValue"
        }
      ]
    },
    "ApplicationNamesList": {
      "type": "list",
      "name": "ApplicationNamesList",
      "member_type": "ApplicationName"
    },
    "TriggerList": {
      "type": "list",
      "name": "TriggerList",
      "member_type": "Trigger"
    },
    "EventMessage": {
      "type": "string",
      "name": "EventMessage"
    },
    "RequestEnvironmentInfoMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "RequestEnvironmentInfoMessage",
      "members": [
        {
          "doc": [
            "The ID of the environment of the requested data.",
            "If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error.",
            "Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "The name of the environment of the requested data.",
            "If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error.",
            "Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "name": "InfoType",
          "doc": [
            "The type of information to request."
          ],
          "required": true,
          "type": "member",
          "target": "EnvironmentInfoType"
        }
      ]
    },
    "SolutionStackDescription": {
      "doc": [
        "Describes the solution stack."
      ],
      "type": "structure",
      "name": "SolutionStackDescription",
      "members": [
        {
          "doc": [
            "The name of the solution stack."
          ],
          "type": "member",
          "name": "SolutionStackName",
          "target": "SolutionStackName"
        },
        {
          "doc": [
            "The permitted file types allowed for a solution stack."
          ],
          "type": "member",
          "name": "PermittedFileTypes",
          "target": "SolutionStackFileTypeList"
        }
      ]
    },
    "EnvironmentDescriptionsMessage": {
      "doc": [
        "Result message containing a list of environment descriptions."
      ],
      "type": "structure",
      "name": "EnvironmentDescriptionsMessage",
      "members": [
        {
          "doc": [
            "Returns an <a>EnvironmentDescription</a> list."
          ],
          "type": "member",
          "name": "Environments",
          "target": "EnvironmentDescriptionsList"
        }
      ]
    },
    "VersionLabel": {
      "max": 100,
      "type": "string",
      "name": "VersionLabel",
      "min": 1
    },
    "AvailableSolutionStackDetailsList": {
      "type": "list",
      "name": "AvailableSolutionStackDetailsList",
      "member_type": "SolutionStackDescription"
    },
    "Message": {
      "type": "string",
      "name": "Message"
    },
    "LoadBalancerDescription": {
      "doc": [
        "Describes the details of a LoadBalancer."
      ],
      "type": "structure",
      "name": "LoadBalancerDescription",
      "members": [
        {
          "doc": [
            "The name of the LoadBalancer."
          ],
          "type": "member",
          "name": "LoadBalancerName",
          "target": "String"
        },
        {
          "doc": [
            "The domain name of the LoadBalancer."
          ],
          "type": "member",
          "name": "Domain",
          "target": "String"
        },
        {
          "doc": [
            "A list of Listeners used by the LoadBalancer."
          ],
          "type": "member",
          "name": "Listeners",
          "target": "LoadBalancerListenersDescription"
        }
      ]
    },
    "S3Bucket": {
      "max": 255,
      "type": "string",
      "name": "S3Bucket"
    },
    "TooManyApplicationsException": {
      "senderfault": "true",
      "code": "TooManyApplicationsException",
      "name": "TooManyApplicationsException",
      "doc": [
        "The caller has exceeded the limit on the number of applications associated with their account."
      ],
      "httpresponsecode": "400",
      "isa": "ElasticBeanstalkServiceException",
      "type": "structure"
    },
    "SolutionStackName": {
      "max": 100,
      "type": "string",
      "name": "SolutionStackName"
    },
    "S3Location": {
      "doc": [
        "A specification of a location in Amazon S3."
      ],
      "type": "structure",
      "name": "S3Location",
      "members": [
        {
          "doc": [
            "The Amazon S3 bucket where the data is located."
          ],
          "type": "member",
          "name": "S3Bucket",
          "target": "S3Bucket"
        },
        {
          "doc": [
            "The Amazon S3 key where the data is located."
          ],
          "type": "member",
          "name": "S3Key",
          "target": "S3Key"
        }
      ]
    },
    "ValidationMessage": {
      "doc": [
        "An error or warning for a desired configuration option value."
      ],
      "type": "structure",
      "name": "ValidationMessage",
      "members": [
        {
          "doc": [
            "A message describing the error or warning."
          ],
          "type": "member",
          "name": "Message",
          "target": "ValidationMessageString"
        },
        {
          "doc": [
            "An indication of the severity of this message:",
            "error: This message indicates that this is not a valid setting for an option.",
            "warning: This message is providing information you should take into account."
          ],
          "type": "member",
          "name": "Severity",
          "target": "ValidationSeverity"
        },
        {
          "doc": [
            "<p/>"
          ],
          "type": "member",
          "name": "Namespace",
          "target": "OptionNamespace"
        },
        {
          "doc": [
            "<p/>"
          ],
          "type": "member",
          "name": "OptionName",
          "target": "ConfigurationOptionName"
        }
      ]
    },
    "EnvironmentInfoDescription": {
      "doc": [
        "The information retrieved from the Amazon EC2 instances."
      ],
      "type": "structure",
      "name": "EnvironmentInfoDescription",
      "members": [
        {
          "doc": [
            "The type of information retrieved."
          ],
          "type": "member",
          "name": "InfoType",
          "target": "EnvironmentInfoType"
        },
        {
          "doc": [
            "The Amazon EC2 Instance ID for this information."
          ],
          "type": "member",
          "name": "Ec2InstanceId",
          "target": "Ec2InstanceId"
        },
        {
          "doc": [
            "The time stamp when this information was retrieved."
          ],
          "type": "member",
          "name": "SampleTimestamp",
          "target": "SampleTimestamp"
        },
        {
          "doc": [
            "The retrieved information."
          ],
          "type": "member",
          "name": "Message",
          "target": "Message"
        }
      ]
    },
    "DeleteConfigurationTemplateMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "DeleteConfigurationTemplateMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application to delete the configuration template from."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "name": "TemplateName",
          "doc": [
            "The name of the configuration template to delete."
          ],
          "required": true,
          "type": "member",
          "target": "ConfigurationTemplateName"
        }
      ]
    },
    "UpdateConfigurationTemplateMessage": {
      "doc": [
        "The result message containing the options for the specified solution stack."
      ],
      "type": "structure",
      "name": "UpdateConfigurationTemplateMessage",
      "members": [
        {
          "name": "ApplicationName",
          "doc": [
            "The name of the application associated with the configuration template to update.",
            "If no application is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "ApplicationName"
        },
        {
          "name": "TemplateName",
          "doc": [
            "The name of the configuration template to update.",
            "If no configuration template is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error."
          ],
          "required": true,
          "type": "member",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "A new description for the configuration."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        },
        {
          "doc": [
            "A list of configuration option settings to update with the new specified option value."
          ],
          "type": "member",
          "name": "OptionSettings",
          "target": "ConfigurationOptionSettingsList"
        },
        {
          "doc": [
            "A list of configuration options to remove from the configuration set.",
            "Constraint: You can remove only <code>UserDefined</code> configuration options."
          ],
          "type": "member",
          "name": "OptionsToRemove",
          "target": "OptionsSpecifierList"
        }
      ]
    },
    "EndpointURL": {
      "type": "string",
      "name": "EndpointURL"
    },
    "EventDescriptionList": {
      "type": "list",
      "name": "EventDescriptionList",
      "member_type": "EventDescription"
    },
    "UpdateDate": {
      "type": "timestamp",
      "name": "UpdateDate"
    },
    "Boolean": {
      "type": "boolean",
      "name": "Boolean"
    },
    "CreationDate": {
      "type": "timestamp",
      "name": "CreationDate"
    },
    "EventDate": {
      "type": "timestamp",
      "name": "EventDate"
    },
    "LoadBalancer": {
      "doc": [
        "Describes a LoadBalancer."
      ],
      "type": "structure",
      "name": "LoadBalancer",
      "members": [
        {
          "doc": [
            "The name of the LoadBalancer."
          ],
          "type": "member",
          "name": "Name",
          "target": "ResourceId"
        }
      ]
    },
    "UpdateEnvironmentMessage": {
      "doc": [
        "This documentation target is not reported in the API reference."
      ],
      "type": "structure",
      "name": "UpdateEnvironmentMessage",
      "members": [
        {
          "doc": [
            "The ID of the environment to update.",
            "If no environment with this ID exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.",
            "Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentId",
          "target": "EnvironmentId"
        },
        {
          "doc": [
            "The name of the environment to update. If no environment with this name exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.",
            "Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error."
          ],
          "type": "member",
          "name": "EnvironmentName",
          "target": "EnvironmentName"
        },
        {
          "doc": [
            "If this parameter is specified, AWS Elastic Beanstalk deploys the named application version to the environment. If no such application version is found, returns an <code>InvalidParameterValue</code> error."
          ],
          "type": "member",
          "name": "VersionLabel",
          "target": "VersionLabel"
        },
        {
          "doc": [
            "If this parameter is specified, AWS Elastic Beanstalk deploys this configuration template to the environment. If no such configuration template is found, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error."
          ],
          "type": "member",
          "name": "TemplateName",
          "target": "ConfigurationTemplateName"
        },
        {
          "doc": [
            "If this parameter is specified, AWS Elastic Beanstalk updates the description of this environment."
          ],
          "type": "member",
          "name": "Description",
          "target": "Description"
        },
        {
          "doc": [
            "If specified, AWS Elastic Beanstalk updates the configuration set associated with the running environment and sets the specified configuration options to the requested value."
          ],
          "type": "member",
          "name": "OptionSettings",
          "target": "ConfigurationOptionSettingsList"
        },
        {
          "doc": [
            "A list of custom user-defined configuration options to remove from the configuration set for this environment."
          ],
          "type": "member",
          "name": "OptionsToRemove",
          "target": "OptionsSpecifierList"
        }
      ]
    }
  },
  "type": "service"
}