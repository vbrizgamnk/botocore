{
    "api_version": "2014-06-30",
    "type": "json",
    "json_version": "1.1",
    "signature_version": "v4",
    "service_full_name": "Amazon Cognito Identity",
    "endpoint_prefix": "cognito-identity",
    "target_prefix": "AWSCognitoIdentityService",
    "xmlnamespace": "http://cognito-identity.amazonaws.com/doc/2014-06-30/",
    "documentation": "\n      <fullname>Amazon Cognito</fullname>\n      <p>Amazon Cognito is a web service that facilitates the delivery of scoped, temporary credentials\n         to mobile devices or other untrusted environments. Amazon Cognito uniquely identifies a device\n         or user and supplies the user with a consistent identity throughout the lifetime of an\n         application.</p>\n      <p>Amazon Cognito lets users authenticate with third-party identity providers (Facebook, Google, or\n         Login with Amazon). As a developer, you decide which identity providers to trust. You can\n         also choose to support unauthenticated access from your application. Your users are\n         provided with Cognito tokens that uniquely identify their device and any information\n         provided about third-party logins.</p>\n   ",
    "operations": {
        "CreateIdentityPool": {
            "name": "CreateIdentityPool",
            "input": {
                "shape_name": "CreateIdentityPoolInput",
                "type": "structure",
                "members": {
                    "IdentityPoolName": {
                        "shape_name": "IdentityPoolName",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 128,
                        "pattern": "[\\w ]+",
                        "documentation": "\n      <p>A string that you provide.</p>\n   ",
                        "required": true
                    },
                    "AllowUnauthenticatedIdentities": {
                        "shape_name": "IdentityPoolUnauthenticated",
                        "type": "boolean",
                        "documentation": "\n      <p>TRUE if the identity pool supports unauthenticated logins.</p>\n   ",
                        "required": true
                    },
                    "SupportedLoginProviders": {
                        "shape_name": "IdentityProviders",
                        "type": "map",
                        "keys": {
                            "shape_name": "IdentityProviderName",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "members": {
                            "shape_name": "IdentityProviderId",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "max_length": 3,
                        "documentation": "\n      <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   "
                    }
                },
                "documentation": "\n      <p>Input to the CreateIdentityPool action.</p>\n   "
            },
            "output": {
                "shape_name": "IdentityPool",
                "type": "structure",
                "members": {
                    "IdentityPoolId": {
                        "shape_name": "IdentityPoolId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "An identity pool ID in the format\n      REGION:GUID.",
                        "required": true
                    },
                    "IdentityPoolName": {
                        "shape_name": "IdentityPoolName",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 128,
                        "pattern": "[\\w ]+",
                        "documentation": "\n      <p>A string that you provide.</p>\n   ",
                        "required": true
                    },
                    "AllowUnauthenticatedIdentities": {
                        "shape_name": "IdentityPoolUnauthenticated",
                        "type": "boolean",
                        "documentation": "TRUE if the identity pool\n      supports unauthenticated logins.",
                        "required": true
                    },
                    "SupportedLoginProviders": {
                        "shape_name": "IdentityProviders",
                        "type": "map",
                        "keys": {
                            "shape_name": "IdentityProviderName",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "members": {
                            "shape_name": "IdentityProviderId",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "max_length": 3,
                        "documentation": "\n      <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   "
                    }
                },
                "documentation": "An object representing a Cognito identity\n      pool."
            },
            "errors": [
                {
                    "shape_name": "InvalidParameterException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InvalidParameterException."
                        }
                    },
                    "documentation": "Thrown for missing or bad input\n      parameter(s)."
                },
                {
                    "shape_name": "NotAuthorizedException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      NotAuthorizedException"
                        }
                    },
                    "documentation": "Thrown when a user is not authorized to access the\n      requested resource."
                },
                {
                    "shape_name": "ResourceConflictException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceConflictException."
                        }
                    },
                    "documentation": "Thrown when a user tries to use a login which\n      is already linked to another account."
                },
                {
                    "shape_name": "TooManyRequestsException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "Message returned by a\n      TooManyRequestsException"
                        }
                    },
                    "documentation": "Thrown when a request is\n      throttled."
                },
                {
                    "shape_name": "InternalErrorException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InternalErrorException."
                        }
                    },
                    "documentation": "Thrown when the service encounters an error during\n      processing the request."
                },
                {
                    "shape_name": "LimitExceededException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      LimitExceededException."
                        }
                    },
                    "documentation": "Thrown when the total number of user pools has\n      exceeded a preset limit."
                }
            ],
            "documentation": "\n      <p>Creates a new identity pool. The identity pool is a store of user identity information that\n         is specific to your AWS account.</p>\n      <examples>\n         <example>\n            <name>CreateIdentityPool</name>\n            <description>The following example shows a request and response for a CreateIdentityPool\n               operation.</description>\n            <request>\n{\n    \"IdentityPoolName\": \"MyIdentityPool\", \n    \"IdentityPoolDescription\": \"My identity pool\", \n    \"Unauthenticated\": true, \n    \"SupportedLoginProviders\": {\n        \"graph.facebook.com\": \"Facebook_App_ID\", \n        \"accounts.google.com\": \"Google_App_ID\", \n        \"www.amazon.com\": \"Amazon_App_ID\" \n    } \n} \n            </request>\n            <response>\n{\n    \"IdentityPoolDescription\": \"My identity pool\", \n    \"IdentityPoolId\": \"us-east-1:1a234b56-7890-1cd2-3e45-f6g7hEXAMPLE\", \n    \"IdentityPoolName\": \"MyIdentityPool\",\n    \"SupportedLoginProviders\": { \n        \"www.amazon.com\": \"Amazon_App_ID\", \n        \"graph.facebook.com\": \"Facebook_App_ID\", \n        \"accounts.google.com\": \"Google_App_ID\" \n    }, \n    \"Unauthenticated\": true\n}\n            </response>\n         </example>\n      </examples>\n   "
        },
        "DeleteIdentityPool": {
            "name": "DeleteIdentityPool",
            "input": {
                "shape_name": "DeleteIdentityPoolInput",
                "type": "structure",
                "members": {
                    "IdentityPoolId": {
                        "shape_name": "IdentityPoolId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "An identity pool ID in the format\n      REGION:GUID.",
                        "required": true
                    }
                },
                "documentation": "\n      <p>Input to the DeleteIdentityPool action.</p>\n   "
            },
            "output": null,
            "errors": [
                {
                    "shape_name": "InvalidParameterException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InvalidParameterException."
                        }
                    },
                    "documentation": "Thrown for missing or bad input\n      parameter(s)."
                },
                {
                    "shape_name": "ResourceNotFoundException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceNotFoundException."
                        }
                    },
                    "documentation": "Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
                },
                {
                    "shape_name": "NotAuthorizedException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      NotAuthorizedException"
                        }
                    },
                    "documentation": "Thrown when a user is not authorized to access the\n      requested resource."
                },
                {
                    "shape_name": "TooManyRequestsException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "Message returned by a\n      TooManyRequestsException"
                        }
                    },
                    "documentation": "Thrown when a request is\n      throttled."
                },
                {
                    "shape_name": "InternalErrorException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InternalErrorException."
                        }
                    },
                    "documentation": "Thrown when the service encounters an error during\n      processing the request."
                }
            ],
            "documentation": "\n      <p>Deletes a user pool. Once a pool is deleted, users will not be able to authenticate with\n         the pool.</p>\n      <examples>\n         <example>\n            <name>DeleteIdentityPool</name>\n            <description>The following is an example of a DeleteIdentityPool request.</description>\n            <request>\n{\n    \"IdentityPoolId\": \"us-east-1:1a234b56-7890-1cd2-3e45-f6g7hEXAMPLE\"\n}\n            </request>\n         </example>\n      </examples>\n   "
        },
        "DescribeIdentityPool": {
            "name": "DescribeIdentityPool",
            "input": {
                "shape_name": "DescribeIdentityPoolInput",
                "type": "structure",
                "members": {
                    "IdentityPoolId": {
                        "shape_name": "IdentityPoolId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "An identity pool ID in the\n      format REGION:GUID.",
                        "required": true
                    }
                },
                "documentation": "Input to the DescribeIdentityPool\n      action."
            },
            "output": {
                "shape_name": "IdentityPool",
                "type": "structure",
                "members": {
                    "IdentityPoolId": {
                        "shape_name": "IdentityPoolId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "An identity pool ID in the format\n      REGION:GUID.",
                        "required": true
                    },
                    "IdentityPoolName": {
                        "shape_name": "IdentityPoolName",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 128,
                        "pattern": "[\\w ]+",
                        "documentation": "\n      <p>A string that you provide.</p>\n   ",
                        "required": true
                    },
                    "AllowUnauthenticatedIdentities": {
                        "shape_name": "IdentityPoolUnauthenticated",
                        "type": "boolean",
                        "documentation": "TRUE if the identity pool\n      supports unauthenticated logins.",
                        "required": true
                    },
                    "SupportedLoginProviders": {
                        "shape_name": "IdentityProviders",
                        "type": "map",
                        "keys": {
                            "shape_name": "IdentityProviderName",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "members": {
                            "shape_name": "IdentityProviderId",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "max_length": 3,
                        "documentation": "\n      <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   "
                    }
                },
                "documentation": "An object representing a Cognito identity\n      pool."
            },
            "errors": [
                {
                    "shape_name": "InvalidParameterException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InvalidParameterException."
                        }
                    },
                    "documentation": "Thrown for missing or bad input\n      parameter(s)."
                },
                {
                    "shape_name": "ResourceNotFoundException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceNotFoundException."
                        }
                    },
                    "documentation": "Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
                },
                {
                    "shape_name": "NotAuthorizedException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      NotAuthorizedException"
                        }
                    },
                    "documentation": "Thrown when a user is not authorized to access the\n      requested resource."
                },
                {
                    "shape_name": "TooManyRequestsException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "Message returned by a\n      TooManyRequestsException"
                        }
                    },
                    "documentation": "Thrown when a request is\n      throttled."
                },
                {
                    "shape_name": "InternalErrorException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InternalErrorException."
                        }
                    },
                    "documentation": "Thrown when the service encounters an error during\n      processing the request."
                }
            ],
            "documentation": "\n      <p>Gets details about a particular identity pool, including the pool name, ID description,\n         creation date, and current number of users.</p>\n      <examples>\n         <example>\n            <name>DescribeIdentityPool</name>\n            <description>The following are an example request and response for the\n               DescribeIdentityPool operation.</description>\n            <request>\n{\n    \"IdentityPoolId\": \"us-east-1:af4311ca-835e-4b49-814c-2290EXAMPLE1\" \n} \n            </request>\n            <response>\n{ \n    \"IdentityPoolDescription\": \"My identity pool\", \n    \"IdentityPoolId\": \"us-east-1:af4311ca-835e-4b49-814c-2290EXAMPLE1\", \n    \"IdentityPoolName\": \"MyIdentityPool\",\n    \"SupportedLoginProviders\": { \n        \"www.amazon.com\": \"Amazon_App_ID\", \n        \"graph.facebook.com\": \"Facebook_App_ID\", \n        \"accounts.google.com\": \"Google_App_ID\" \n    },\n    \"Unauthenticated\": true \n}\n            </response>\n         </example>\n      </examples>\n   "
        },
        "GetId": {
            "name": "GetId",
            "input": {
                "shape_name": "GetIdInput",
                "type": "structure",
                "members": {
                    "AccountId": {
                        "shape_name": "AccountId",
                        "type": "string",
                        "pattern": "\\d+",
                        "min_length": 1,
                        "max_length": 15,
                        "documentation": "A standard AWS account ID (9+\n      digits).",
                        "required": true
                    },
                    "IdentityPoolId": {
                        "shape_name": "IdentityPoolId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "An identity pool ID in the format\n      REGION:GUID.",
                        "required": true
                    },
                    "Logins": {
                        "shape_name": "LoginsMap",
                        "type": "map",
                        "keys": {
                            "shape_name": "IdentityProviderName",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "members": {
                            "shape_name": "IdentityProviderToken",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 1024,
                            "pattern": "[\\S]+",
                            "documentation": null
                        },
                        "max_length": 3,
                        "documentation": "A set of optional name/value pairs that map provider\n      names to provider tokens."
                    }
                },
                "documentation": "Input to the GetId action."
            },
            "output": {
                "shape_name": "GetIdResponse",
                "type": "structure",
                "members": {
                    "IdentityId": {
                        "shape_name": "IdentityId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "A unique identifier in the format\n      REGION:GUID."
                    }
                },
                "documentation": "Returned in the response to a GetId\n      request."
            },
            "errors": [
                {
                    "shape_name": "InvalidParameterException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InvalidParameterException."
                        }
                    },
                    "documentation": "Thrown for missing or bad input\n      parameter(s)."
                },
                {
                    "shape_name": "ResourceNotFoundException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceNotFoundException."
                        }
                    },
                    "documentation": "Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
                },
                {
                    "shape_name": "NotAuthorizedException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      NotAuthorizedException"
                        }
                    },
                    "documentation": "Thrown when a user is not authorized to access the\n      requested resource."
                },
                {
                    "shape_name": "ResourceConflictException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceConflictException."
                        }
                    },
                    "documentation": "Thrown when a user tries to use a login which\n      is already linked to another account."
                },
                {
                    "shape_name": "TooManyRequestsException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "Message returned by a\n      TooManyRequestsException"
                        }
                    },
                    "documentation": "Thrown when a request is\n      throttled."
                },
                {
                    "shape_name": "InternalErrorException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InternalErrorException."
                        }
                    },
                    "documentation": "Thrown when the service encounters an error during\n      processing the request."
                },
                {
                    "shape_name": "LimitExceededException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      LimitExceededException."
                        }
                    },
                    "documentation": "Thrown when the total number of user pools has\n      exceeded a preset limit."
                }
            ],
            "documentation": "\n      <p>Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an implicit\n         linked account.</p>\n      <examples>\n         <example>\n            <name>GetId</name>\n            <description> The following example shows a GetId request for an unauthenticated\n               identity.</description>\n            <request> \n{\n    \"AccountId\": \"123456789012;\", \n    \"IdentityPoolId\": \"us-east-1:af4311ca-835e-4b49-814c-2290EXAMPLE1\" \n} \n               </request>\n            <response>\n{\n    \"IdentityId\": \"us-east-1:852d4250-9eec-4006-8f84-4e82EXAMPLE3\"\n}\n               </response>\n         </example>\n      </examples>\n   "
        },
        "GetOpenIdToken": {
            "name": "GetOpenIdToken",
            "input": {
                "shape_name": "GetOpenIdTokenInput",
                "type": "structure",
                "members": {
                    "IdentityId": {
                        "shape_name": "IdentityId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "A unique identifier in the format\n      REGION:GUID.",
                        "required": true
                    },
                    "Logins": {
                        "shape_name": "LoginsMap",
                        "type": "map",
                        "keys": {
                            "shape_name": "IdentityProviderName",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "members": {
                            "shape_name": "IdentityProviderToken",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 1024,
                            "pattern": "[\\S]+",
                            "documentation": null
                        },
                        "max_length": 3,
                        "documentation": "A set of optional name/value pairs that map\n      provider names to provider tokens."
                    }
                },
                "documentation": "Input to the GetOpenIdToken action."
            },
            "output": {
                "shape_name": "GetOpenIdTokenResponse",
                "type": "structure",
                "members": {
                    "IdentityId": {
                        "shape_name": "IdentityId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "A unique identifier in the format\n      REGION:GUID. Note that the IdentityId returned may not match the one passed on\n      input."
                    },
                    "Token": {
                        "shape_name": "OIDCToken",
                        "type": "string",
                        "documentation": "An OpenID token."
                    }
                },
                "documentation": "Returned in response to a successful\n      GetOpenIdToken request."
            },
            "errors": [
                {
                    "shape_name": "InvalidParameterException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InvalidParameterException."
                        }
                    },
                    "documentation": "Thrown for missing or bad input\n      parameter(s)."
                },
                {
                    "shape_name": "ResourceNotFoundException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceNotFoundException."
                        }
                    },
                    "documentation": "Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
                },
                {
                    "shape_name": "NotAuthorizedException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      NotAuthorizedException"
                        }
                    },
                    "documentation": "Thrown when a user is not authorized to access the\n      requested resource."
                },
                {
                    "shape_name": "ResourceConflictException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceConflictException."
                        }
                    },
                    "documentation": "Thrown when a user tries to use a login which\n      is already linked to another account."
                },
                {
                    "shape_name": "TooManyRequestsException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "Message returned by a\n      TooManyRequestsException"
                        }
                    },
                    "documentation": "Thrown when a request is\n      throttled."
                },
                {
                    "shape_name": "InternalErrorException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InternalErrorException."
                        }
                    },
                    "documentation": "Thrown when the service encounters an error during\n      processing the request."
                }
            ],
            "documentation": "\n      <p>Gets an OpenID token, using a known Cognito ID. This known Cognito ID is returned from\n         GetId. You can optionally add additional logins for the identity. Supplying multiple logins\n         creates an implicit link.</p>\n      <examples>\n         <example>\n            <name>GetOpenIdToken</name>\n            <description>The following examples show a GetOpenIdToken request and response, without\n               the optional login values.</description>\n            <request>\n{\n    \"IdentityId\": \"us-east-1:852d4250-9eec-4006-8f84-4e82EXAMPLE3\"\n}\n         </request>\n            <response>\n{\n    \"IdentityId\": \"us-east-1:852d4250-9eec-4006-8f84-4e82EXAMPLE3\", \n    \"Token\": \"EXAmpLeTOkENUzUxMiIsInR5cCI6IkpXUyIsImtpZCI6InVzLWVhc3QtMTEifQ.eyJleHAiOjE0MDI2Njg0NTAsInN1YiI6InVzLWVhc3QtMTo5MjFhMzg0My0yZGQ2LTQ2YjgtYWIyZi1jNjc5NTUyZTM3MWUiLCJhdWQiOiJ1cy1lYXN0LTE6YWY0MzExY2EtODM1ZS00YjQ5LTgxNGMtMjI5MGQ4ZDU1YTZmIiwiaXNzIjoiaHR0cHM6Ly9jb2duaXRvLWlkZW50aXR5LXB1YmxpYy1pYWQtYmV0YS5hbWF6b24uY29tIiwiaWF0IjoxNDAyNjY3ODUwLCJhbXIiOlsidW5hdXRoZW50aWNhdGVkIl19.faWdRGsKxT8YqTBnAow1fNyXE57kjScKQ0lyFpFAUIl6VNVV-nQ_QD8XKHB_pAY2UNtxYFDoGhHrL3cqH_FLSfRLG-X3EaIrCsr0A6KIW7X69wsAxJQB-EvYru0UhDpcPaDyQUXTHFmRP9bzJMsSLi7nXm-OD4DCujX3vKwOhlSymbH9KbAG105t3_G_a8tsUbCV488nvlrA-7Omp0D18T1__XeZttldW1GODOK2OY2bK5-3eyodcqbVXaPTotxO5PTlYpzuMS1XfTejC8LJ2DocP_eBT7xhSr2qkro9Y6uCDph_-6ttYrXRaaLKZv3v1Lz6PGHrsPhJdK_bYRHhdg\"\n}\n               </response>\n         </example>\n      </examples>\n   "
        },
        "ListIdentities": {
            "name": "ListIdentities",
            "input": {
                "shape_name": "ListIdentitiesInput",
                "type": "structure",
                "members": {
                    "IdentityPoolId": {
                        "shape_name": "IdentityPoolId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "An identity pool ID in the format\n      REGION:GUID.",
                        "required": true
                    },
                    "MaxResults": {
                        "shape_name": "QueryLimit",
                        "type": "integer",
                        "min_length": 1,
                        "max_length": 60,
                        "documentation": "The maximum number of identities to return.",
                        "required": true
                    },
                    "NextToken": {
                        "shape_name": "PaginationKey",
                        "type": "string",
                        "min_length": 1,
                        "documentation": " A pagination token. "
                    }
                },
                "documentation": "Input to the ListIdentities action."
            },
            "output": {
                "shape_name": "ListIdentitiesResponse",
                "type": "structure",
                "members": {
                    "IdentityPoolId": {
                        "shape_name": "IdentityPoolId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "An identity pool ID in the format\n      REGION:GUID."
                    },
                    "Identities": {
                        "shape_name": "IdentitiesList",
                        "type": "list",
                        "members": {
                            "shape_name": "IdentityDescription",
                            "type": "structure",
                            "members": {
                                "IdentityId": {
                                    "shape_name": "IdentityId",
                                    "type": "string",
                                    "pattern": "[\\w-]+:[0-9a-f-]+",
                                    "min_length": 1,
                                    "max_length": 50,
                                    "documentation": "A unique identifier in the format\n      REGION:GUID."
                                },
                                "Logins": {
                                    "shape_name": "LoginsList",
                                    "type": "list",
                                    "members": {
                                        "shape_name": "IdentityProviderName",
                                        "type": "string",
                                        "min_length": 1,
                                        "max_length": 128,
                                        "pattern": "[\\w._-]+",
                                        "documentation": null
                                    },
                                    "documentation": "A set of optional name/value pairs that map\n      provider names to provider tokens."
                                }
                            },
                            "documentation": "A description of the identity."
                        },
                        "documentation": "An object containing a set of\n      identities and associated mappings."
                    },
                    "NextToken": {
                        "shape_name": "PaginationKey",
                        "type": "string",
                        "min_length": 1,
                        "documentation": "A pagination token."
                    }
                },
                "documentation": "The response to a ListIdentities\n      request."
            },
            "errors": [
                {
                    "shape_name": "InvalidParameterException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InvalidParameterException."
                        }
                    },
                    "documentation": "Thrown for missing or bad input\n      parameter(s)."
                },
                {
                    "shape_name": "ResourceNotFoundException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceNotFoundException."
                        }
                    },
                    "documentation": "Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
                },
                {
                    "shape_name": "NotAuthorizedException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      NotAuthorizedException"
                        }
                    },
                    "documentation": "Thrown when a user is not authorized to access the\n      requested resource."
                },
                {
                    "shape_name": "TooManyRequestsException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "Message returned by a\n      TooManyRequestsException"
                        }
                    },
                    "documentation": "Thrown when a request is\n      throttled."
                },
                {
                    "shape_name": "InternalErrorException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InternalErrorException."
                        }
                    },
                    "documentation": "Thrown when the service encounters an error during\n      processing the request."
                }
            ],
            "documentation": "\n      <p>Lists the identities in a pool.</p>\n      <examples>\n         <example>\n            <name>ListIdentities</name>\n            <description>The following are examples of a request and a response for the\n               ListIdentities action.</description>\n            <request>\n{\n    \"IdentityPoolId\": \"us-east-1:1a234b56-7890-1cd2-3e45-f6g7hEXAMPLE\", \n    \"MaxResults\": 10\n}\n               </request>\n            <response>\n{\n    \"Identities\": \n        [\n            {\n                \"IdentityId\": \"us-east-1:2345a6b7-8cc3-4a60-8aeb-e11bEXAMPLE4\"\n            }, \n            {\n                \"IdentityId\": \"us-east-1:852d4250-9eec-4006-8f84-4e82EXAMPLE3\"\n            }, \n            {\n                \"IdentityId\": \"us-east-1:921a3843-2dd6-46b8-ab2f-c679EXAMPLE5\"\n            }\n        ], \n    \"IdentityPoolId\": \"us-east-1:1a234b56-7890-1cd2-3e45-f6g7hEXAMPLE\"\n}\n               </response>\n         </example>\n      </examples>\n   "
        },
        "ListIdentityPools": {
            "name": "ListIdentityPools",
            "input": {
                "shape_name": "ListIdentityPoolsInput",
                "type": "structure",
                "members": {
                    "MaxResults": {
                        "shape_name": "QueryLimit",
                        "type": "integer",
                        "min_length": 1,
                        "max_length": 60,
                        "documentation": " The maximum number of identities\n      to return. ",
                        "required": true
                    },
                    "NextToken": {
                        "shape_name": "PaginationKey",
                        "type": "string",
                        "min_length": 1,
                        "documentation": " A pagination token. "
                    }
                },
                "documentation": "Input to the ListIdentityPools\n      action."
            },
            "output": {
                "shape_name": "ListIdentityPoolsResponse",
                "type": "structure",
                "members": {
                    "IdentityPools": {
                        "shape_name": "IdentityPoolsList",
                        "type": "list",
                        "members": {
                            "shape_name": "IdentityPoolShortDescription",
                            "type": "structure",
                            "members": {
                                "IdentityPoolId": {
                                    "shape_name": "IdentityPoolId",
                                    "type": "string",
                                    "pattern": "[\\w-]+:[0-9a-f-]+",
                                    "min_length": 1,
                                    "max_length": 50,
                                    "documentation": "An identity pool ID in the\n      format REGION:GUID."
                                },
                                "IdentityPoolName": {
                                    "shape_name": "IdentityPoolName",
                                    "type": "string",
                                    "min_length": 1,
                                    "max_length": 128,
                                    "pattern": "[\\w ]+",
                                    "documentation": "A string that you\n      provide."
                                }
                            },
                            "documentation": "A description of the identity\n      pool."
                        },
                        "documentation": "The identity pools returned by\n      the ListIdentityPools action."
                    },
                    "NextToken": {
                        "shape_name": "PaginationKey",
                        "type": "string",
                        "min_length": 1,
                        "documentation": "A pagination token."
                    }
                },
                "documentation": "The result of a successful ListIdentityPools\n      action."
            },
            "errors": [
                {
                    "shape_name": "InvalidParameterException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InvalidParameterException."
                        }
                    },
                    "documentation": "Thrown for missing or bad input\n      parameter(s)."
                },
                {
                    "shape_name": "NotAuthorizedException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      NotAuthorizedException"
                        }
                    },
                    "documentation": "Thrown when a user is not authorized to access the\n      requested resource."
                },
                {
                    "shape_name": "TooManyRequestsException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "Message returned by a\n      TooManyRequestsException"
                        }
                    },
                    "documentation": "Thrown when a request is\n      throttled."
                },
                {
                    "shape_name": "InternalErrorException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InternalErrorException."
                        }
                    },
                    "documentation": "Thrown when the service encounters an error during\n      processing the request."
                }
            ],
            "documentation": "\n      <p>Lists all of the Cognito identity pools registered for your account.</p>\n      <examples>\n         <example>\n            <name>ListIdentityPools</name>\n            <description>The following example shows a request and a response for a\n               ListIdentityPools operation.</description>\n            <request>\n{\n    \"MaxResults\": 10\n}\n            </request>\n            <response>\n{\n    \"IdentityPools\": \n        [\n            {\n                \"IdentityPoolId\": \"us-east-1:af4311ca-835e-4b49-814c-2290EXAMPLE1\", \n                \"IdentityPoolName\": \"MyPool\"\n            }, \n            {\n                \"IdentityPoolId\": \"us-east-1:f212b602-a526-4557-af13-8eedEXAMPLE2\", \n                \"IdentityPoolName\": \"MyPool2\"\n            }\n        ]\n}\n            </response>\n         </example>\n      </examples>\n   "
        },
        "UnlinkIdentity": {
            "name": "UnlinkIdentity",
            "input": {
                "shape_name": "UnlinkIdentityInput",
                "type": "structure",
                "members": {
                    "IdentityId": {
                        "shape_name": "IdentityId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "A unique identifier in the format\n      REGION:GUID.",
                        "required": true
                    },
                    "Logins": {
                        "shape_name": "LoginsMap",
                        "type": "map",
                        "keys": {
                            "shape_name": "IdentityProviderName",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "members": {
                            "shape_name": "IdentityProviderToken",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 1024,
                            "pattern": "[\\S]+",
                            "documentation": null
                        },
                        "max_length": 3,
                        "documentation": "A set of optional name/value pairs that map\n      provider names to provider tokens.",
                        "required": true
                    },
                    "LoginsToRemove": {
                        "shape_name": "LoginsList",
                        "type": "list",
                        "members": {
                            "shape_name": "IdentityProviderName",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "documentation": "Provider names to unlink from this identity.",
                        "required": true
                    }
                },
                "documentation": "Input to the UnlinkIdentity action."
            },
            "output": null,
            "errors": [
                {
                    "shape_name": "InvalidParameterException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InvalidParameterException."
                        }
                    },
                    "documentation": "Thrown for missing or bad input\n      parameter(s)."
                },
                {
                    "shape_name": "ResourceNotFoundException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceNotFoundException."
                        }
                    },
                    "documentation": "Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
                },
                {
                    "shape_name": "NotAuthorizedException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      NotAuthorizedException"
                        }
                    },
                    "documentation": "Thrown when a user is not authorized to access the\n      requested resource."
                },
                {
                    "shape_name": "ResourceConflictException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceConflictException."
                        }
                    },
                    "documentation": "Thrown when a user tries to use a login which\n      is already linked to another account."
                },
                {
                    "shape_name": "TooManyRequestsException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "Message returned by a\n      TooManyRequestsException"
                        }
                    },
                    "documentation": "Thrown when a request is\n      throttled."
                },
                {
                    "shape_name": "InternalErrorException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InternalErrorException."
                        }
                    },
                    "documentation": "Thrown when the service encounters an error during\n      processing the request."
                }
            ],
            "documentation": "\n      <p>Unlinks a federated identity from an existing account. Unlinked logins will be considered\n         new identities next time they are seen. Removing the last linked login will make this\n         identity inaccessible.</p>\n   "
        },
        "UpdateIdentityPool": {
            "name": "UpdateIdentityPool",
            "input": {
                "shape_name": "IdentityPool",
                "type": "structure",
                "members": {
                    "IdentityPoolId": {
                        "shape_name": "IdentityPoolId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "An identity pool ID in the format\n      REGION:GUID.",
                        "required": true
                    },
                    "IdentityPoolName": {
                        "shape_name": "IdentityPoolName",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 128,
                        "pattern": "[\\w ]+",
                        "documentation": "\n      <p>A string that you provide.</p>\n   ",
                        "required": true
                    },
                    "AllowUnauthenticatedIdentities": {
                        "shape_name": "IdentityPoolUnauthenticated",
                        "type": "boolean",
                        "documentation": "TRUE if the identity pool\n      supports unauthenticated logins.",
                        "required": true
                    },
                    "SupportedLoginProviders": {
                        "shape_name": "IdentityProviders",
                        "type": "map",
                        "keys": {
                            "shape_name": "IdentityProviderName",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "members": {
                            "shape_name": "IdentityProviderId",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "max_length": 3,
                        "documentation": "\n      <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   "
                    }
                },
                "documentation": "An object representing a Cognito identity\n      pool."
            },
            "output": {
                "shape_name": "IdentityPool",
                "type": "structure",
                "members": {
                    "IdentityPoolId": {
                        "shape_name": "IdentityPoolId",
                        "type": "string",
                        "pattern": "[\\w-]+:[0-9a-f-]+",
                        "min_length": 1,
                        "max_length": 50,
                        "documentation": "An identity pool ID in the format\n      REGION:GUID.",
                        "required": true
                    },
                    "IdentityPoolName": {
                        "shape_name": "IdentityPoolName",
                        "type": "string",
                        "min_length": 1,
                        "max_length": 128,
                        "pattern": "[\\w ]+",
                        "documentation": "\n      <p>A string that you provide.</p>\n   ",
                        "required": true
                    },
                    "AllowUnauthenticatedIdentities": {
                        "shape_name": "IdentityPoolUnauthenticated",
                        "type": "boolean",
                        "documentation": "TRUE if the identity pool\n      supports unauthenticated logins.",
                        "required": true
                    },
                    "SupportedLoginProviders": {
                        "shape_name": "IdentityProviders",
                        "type": "map",
                        "keys": {
                            "shape_name": "IdentityProviderName",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "members": {
                            "shape_name": "IdentityProviderId",
                            "type": "string",
                            "min_length": 1,
                            "max_length": 128,
                            "pattern": "[\\w._-]+",
                            "documentation": null
                        },
                        "max_length": 3,
                        "documentation": "\n      <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   "
                    }
                },
                "documentation": "An object representing a Cognito identity\n      pool."
            },
            "errors": [
                {
                    "shape_name": "InvalidParameterException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InvalidParameterException."
                        }
                    },
                    "documentation": "Thrown for missing or bad input\n      parameter(s)."
                },
                {
                    "shape_name": "ResourceNotFoundException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceNotFoundException."
                        }
                    },
                    "documentation": "Thrown when the requested resource (for\n      example, a dataset or record) does not exist."
                },
                {
                    "shape_name": "NotAuthorizedException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      NotAuthorizedException"
                        }
                    },
                    "documentation": "Thrown when a user is not authorized to access the\n      requested resource."
                },
                {
                    "shape_name": "ResourceConflictException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by a\n      ResourceConflictException."
                        }
                    },
                    "documentation": "Thrown when a user tries to use a login which\n      is already linked to another account."
                },
                {
                    "shape_name": "TooManyRequestsException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "Message returned by a\n      TooManyRequestsException"
                        }
                    },
                    "documentation": "Thrown when a request is\n      throttled."
                },
                {
                    "shape_name": "InternalErrorException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "The message returned by an\n      InternalErrorException."
                        }
                    },
                    "documentation": "Thrown when the service encounters an error during\n      processing the request."
                }
            ],
            "documentation": "\n      <p>Updates a user pool.</p>\n      <examples>\n         <example>\n            <name>UpdateIdentityPool</name>\n            <description>The following are a request and response for the UpdateIdentityPool\n               action.</description>\n            <request>\n{\n    \"IdentityPoolId\": \"us-east-1:1a234b56-7890-1cd2-3e45-f6g7hEXAMPLE\", \n    \"IdentityPoolName\": \"MyUpdatedPool\", \n    \"IdentityPoolDescription\": \"An identity pool that needs updating\", \n    \"Unauthenticated\": true, \n    \"SupportedLoginProviders\": \n    {\n        \"www.amazon.com\": \"Amazon_App_ID\", \n        \"graph.facebook.com\": \"Facebook_App_ID\", \n        \"accounts.google.com\": \"Google_App_ID\"\n    }\n}\n               </request>\n            <response>\n{\n    \"IdentityPoolDescription\": \"An identity pool that needs updating\", \n    \"IdentityPoolId\": \"us-east-1:1a234b56-7890-1cd2-3e45-f6g7hEXAMPLE\", \n    \"IdentityPoolName\": \"MyUpdatedPool\", \n    \"SupportedLoginProviders\": \n    {\n        \"www.amazon.com\": \"Amazon_App_ID\", \n        \"graph.facebook.com\": \"Facebook_App_ID\", \n        \"accounts.google.com\": \"Google_App_ID\"\n    }, \n    \"AllowUnauthenticatedIdentities\": true\n}\n               </response>\n         </example>\n      </examples>\n   "
        }
    },
    "retry": {
        "__default__": {
            "max_attempts": 5,
            "delay": {
                "type": "exponential",
                "base": "rand",
                "growth_factor": 2
            },
            "policies": {
                "general_socket_errors": {
                    "applies_when": {
                        "socket_errors": [
                            "GENERAL_CONNECTION_ERROR"
                        ]
                    }
                },
                "general_server_error": {
                    "applies_when": {
                        "response": {
                            "http_status_code": 500
                        }
                    }
                },
                "service_unavailable": {
                    "applies_when": {
                        "response": {
                            "http_status_code": 503
                        }
                    }
                },
                "limit_exceeded": {
                    "applies_when": {
                        "response": {
                            "http_status_code": 509
                        }
                    }
                }
            }
        }
    }
}