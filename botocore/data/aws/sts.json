{
    "service_full_name": "AWS Security Token Service",
    "service_abbreviation": "AWS STS",
    "type": "query",
    "signature_version": "v4",
    "result_wrapped": true,
    "global_endpoint": "sts.amazonaws.com",
    "api_version": "2011-06-15",
    "endpoint_prefix": "sts",
    "xmlnamespace": "https://sts.amazonaws.com/doc/2011-06-15/",
    "documentation": "\n    <fullname>AWS Security Token Service</fullname>\n\n    <p>The AWS Security Token Service is a web service that enables you to request temporary, \n    limited-privilege credentials for AWS Identity and Access Management (IAM) users or for users that you authenticate (federated users). This guide \n    provides descriptions of the AWS Security Token Service API.</p> \n    \n    <p>For more detailed information about using this service, go to <a href=\"http://docs.amazonwebservices.com/IAM/latest/UsingSTS/Welcome.html\" target=\"_blank\">Using Temporary Security Credentials</a>.</p>\n\n\t<p>For information about setting up signatures and \n\t\tauthorization through the API, go to <a href=\"http://docs.amazonwebservices.com/general/latest/gr/signing_aws_api_requests.html\" target=\"_blank\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about \n\t\tthe Query API, go to <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\" target=\"_blank\">Making Query Requests</a> in <i>Using IAM</i>. For information about using security tokens with other AWS products, go to\n\t\t<a href=\"http://docs.amazonwebservices.com/IAM/latest/UsingSTS/UsingTokens.html\">Using Temporary Security Credentials to Access AWS</a>\n\tin <i>Using Temporary Security Credentials</i>.</p>\n\n        <p>If you're new to AWS and need additional technical information about a specific AWS product, you can find the product's\ntechnical documentation at <a href=\"http://aws.amazon.com/documentation/\" target=\"_blank\">http://aws.amazon.com/documentation/</a>.</p>\n    \n    <p>We will refer to Amazon Identity and Access Management using the abbreviated form IAM. \n\t\tAll copyrights and legal protections still apply.</p>\n\t\t\n ",
    "operations": {
        "AssumeRole": {
            "input": {
                "shape_name": "AssumeRoleRequest",
                "type": "structure",
                "members": {
                    "RoleArn": {
                        "shape_name": "arnType",
                        "type": "string",
                        "min_length": 20,
                        "max_length": 2048,
                        "documentation": "\n    <p>The Amazon Resource Name (ARN) of the role that the caller is assuming.</p>\n",
                        "required": true
                    },
                    "RoleSessionName": {
                        "shape_name": "userNameType",
                        "type": "string",
                        "min_length": 2,
                        "max_length": 32,
                        "pattern": "[\\w+=,.@-]*",
                        "documentation": "\n    <p>An identifier for the assumed role session. The session name is included as part of the <code>AssumedRoleUser</code>.</p>\n",
                        "required": true
                    },
                    "Policy": {
                        "shape_name": "sessionPolicyDocumentType",
                        "type": "string",
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
                        "min_length": 1,
                        "max_length": 2048,
                        "documentation": "\n    <p>A supplemental policy that can be associated with the temporary security credentials. The caller can restrict the permissions\n       that are available on the role's temporary security credentials to maintain the least amount of privileges.\n       When a service call is made with the temporary security credentials, both the role's permission policy and supplemental policy are checked.\n       For more information about how permissions work in the context of temporary credentials, see\n       <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/TokenPermissions.html\" target=\"_blank\">Controlling Permissions in Temporary Credentials</a>.</p>\n"
                    },
                    "DurationSeconds": {
                        "shape_name": "roleDurationSecondsType",
                        "type": "integer",
                        "min_length": 900,
                        "max_length": 3600,
                        "documentation": "\n    <p>The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour).\n       By default, the value is set to 3600 seconds (1 hour).</p>\n"
                    },
                    "ExternalId": {
                        "shape_name": "externalIdType",
                        "type": "string",
                        "min_length": 2,
                        "max_length": 96,
                        "pattern": "[\\w+=,.@:-]*",
                        "documentation": "\n    <p>A unique identifier that is generated by a third party for each of their customers. For each role that the third party can assume,\n        they should instruct their customers to create a role with the external ID that was generated by the third party.\n        Each time the third party assumes the role, they must pass the customer's correct external ID.\n        The external ID is useful in order to help third parties bind a role to the customer who created it.\n        For more information about the external ID, see <a href=\"http://docs.amazonwebservices.com/STS/latest/UsingSTS/sts-delegating-externalid.html\" target=\"_blank\">About the External ID</a> \n        in <i>Using Temporary Security Credentials</i>.</p>\n"
                    }
                },
                "documentation": ""
            },
            "output": {
                "shape_name": "AssumeRoleResponse",
                "type": "structure",
                "members": {
                    "Credentials": {
                        "shape_name": "Credentials",
                        "type": "structure",
                        "members": {
                            "AccessKeyId": {
                                "shape_name": "accessKeyIdType",
                                "type": "string",
                                "min_length": 16,
                                "max_length": 32,
                                "pattern": "[\\w]*",
                                "documentation": "\n\t<p>AccessKeyId ID that identifies the temporary credentials.</p>\n",
                                "required": true
                            },
                            "SecretAccessKey": {
                                "shape_name": "accessKeySecretType",
                                "type": "string",
                                "documentation": "\n\t<p>The Secret Access Key to sign requests.</p>\n",
                                "required": true
                            },
                            "SessionToken": {
                                "shape_name": "tokenType",
                                "type": "string",
                                "documentation": "\n\t<p>The security token that users must pass to the service API to use the temporary credentials.</p>\n",
                                "required": true
                            },
                            "Expiration": {
                                "shape_name": "dateType",
                                "type": "timestamp",
                                "documentation": "\n\t<p>The date on which these credentials expire.</p>\n",
                                "required": true
                            }
                        },
                        "documentation": "\n    <p>The temporary security credentials, which includes an Access Key ID, a Secret Access Key, and a security token.</p>\n"
                    },
                    "AssumedRoleUser": {
                        "shape_name": "AssumedRoleUser",
                        "type": "structure",
                        "members": {
                            "AssumedRoleId": {
                                "shape_name": "assumedRoleIdType",
                                "type": "string",
                                "min_length": 2,
                                "max_length": 96,
                                "pattern": "[\\w+=,.@:-]*",
                                "documentation": "\n    <p>A unique identifier that contains the role ID and the role session name of the role that is being assumed. The role ID was generated by AWS when the role was created.</p>\n",
                                "required": true
                            },
                            "Arn": {
                                "shape_name": "arnType",
                                "type": "string",
                                "min_length": 20,
                                "max_length": 2048,
                                "documentation": "\n    <p>The ARN of the temporary security credentials that are returned from the AssumeRole action.\n        For more information about ARNs and how to use them in policies, \n        see <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/Using_Identifiers.html\" target=\"_blank\">\n            Identifiers for IAM Entities</a> in <i>Using IAM</i>.</p>\n",
                                "required": true
                            }
                        },
                        "documentation": "\n    <p>The Amazon Resource Name (ARN) and the assumed role ID for the temporary security credentials.\n        The ARN and the role ID are identifiers for the temporary security credentials so that you can refer to the temporary credentials in a policy. For example,\n        if you want to build a policy that applies to these temporary credentials, you would specify the <code>AssumedRoleUser</code> ARN or role ID in that policy.\n        </p>\n"
                    },
                    "PackedPolicySize": {
                        "shape_name": "nonNegativeIntegerType",
                        "type": "integer",
                        "min_length": 0,
                        "documentation": "\n    <p>A percentage value that indicates the size of the policy in packed form. The service rejects\n       any policy with a packed size greater than 100 percent, which means the policy exceeded the allowed space.</p>\n"
                    }
                },
                "documentation": "\n    <p>Contains the result of a successful invocation of the <a>AssumeRole</a> action.</p>\n"
            },
            "errors": [
                {
                    "shape_name": "MalformedPolicyDocumentException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "malformedPolicyDocumentMessage",
                            "type": "string",
                            "documentation": ""
                        }
                    },
                    "documentation": "\n    <p>The request was rejected because the policy document was malformed. The error message describes the specific error.</p>\n"
                },
                {
                    "shape_name": "PackedPolicyTooLargeException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "packedPolicyTooLargeMessage",
                            "type": "string",
                            "documentation": ""
                        }
                    },
                    "documentation": "\n    <p>The request was rejected because the policy document was too large. The error message describes how big the policy document\n       is, in packed form, as a percentage of what the API allows.</p>\n"
                }
            ],
            "documentation": "\n    <p>\n        The <code>AssumeRole</code> action returns a set of temporary security credentials that\n        you can use to access resources that are defined in the role's policy.\n        The returned credentials consist of an Access Key ID, a Secret Access Key, and a security token.\n\t</p>\n\t<p>\n\t\t<b>Important:</b> Only IAM users can assume a role. If you use AWS account credentials to call AssumeRole, access is denied.\n\t</p>\n\t<p>\n        The credentials are valid for the duration that you specified when calling <code>AssumeRole</code>, which can be from 15 minutes to 1 hour.\n    </p>\n    <p>\n        When you assume a role, you have the privileges that are defined in the role. You can further restrict the privileges by passing a policy when calling <code>AssumeRole</code>.\n    </p>\n    <p>\n        To assume a role, you must be an IAM user from a trusted entity and have permission to call <code>AssumeRole</code>.\n        Trusted entites are defined when the IAM role is created. Permission to call <code>AssumeRole</code> is defined in your or your group's IAM policy.\n    </p>\n    \n    <member name=\"RoleArn\" target=\"arnType\"></member>\n    <member name=\"RoleSessionName\" target=\"userNameType\"></member>\n    <member name=\"Policy\" target=\"sessionPolicyDocumentType\"></member>\n    <member name=\"DurationSeconds\" target=\"roleDurationSecondsType\"></member>\n    <member name=\"ExternalId\" target=\"externalIdType\"></member>\n    <examples>\n        <queryrequest>https://sts.amazonaws.com/\n?Version=2011-06-15\n&Action=AssumeRole\n&RoleSessionName=Bob\n&RoleArn=arn:aws:iam::123456789012:role/demo\n&Policy=%7B%22Statement%22%3A%5B%7B%22Sid%22%3A%22Stmt1%22%2C%22Effect%22%\n 3A%22Allow%22%2C%22Action%22%3A%22s3%3A*%22%2C%22Resource%22%3A%22*%22%7D\n %5D%7D\n&DurationSeconds=3600\n&ExternalId=123ABC\n&AUTHPARAMS</queryrequest>\n\n<queryresponse><AssumeRoleResponse xmlns=\"https://sts.amazonaws.com/doc/\n2011-06-15/\">\n  <AssumeRoleResult>\n    <Credentials>\n      <SessionToken>\n       AQoDYXdzEPT//////////wEXAMPLEtc764bNrC9SAPBSM22wDOk4x4HIZ8j4FZTwdQW\n       LWsKWHGBuFqwAeMicRXmxfpSPfIeoIYRqTflfKD8YUuwthAx7mSEI/qkPpKPi/kMcGd\n       QrmGdeehM4IC1NtBmUpp2wUE8phUZampKsburEDy0KPkyQDYwT7WZ0wq5VSXDvp75YU\n       9HFvlRd8Tx6q6fE8YQcHNVXAkiY9q6d+xo0rKwT38xVqr7ZD0u0iPPkUL64lIZbqBAz\n       +scqKmlzm8FDrypNC9Yjc8fPOLn9FX9KSYvKTr4rvx3iSIlTJabIQwj2ICCR/oLxBA==\n      </SessionToken>\n      <SecretAccessKey>\n       wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\n      </SecretAccessKey>\n      <Expiration>2011-07-15T23:28:33.359Z</Expiration>\n      <AccessKeyId>AKIAIOSFODNN7EXAMPLE</AccessKeyId>\n    </Credentials>\n    <AssumedRoleUser>\n      <Arn>arn:aws:sts::123456789012:assumed-role/demo/Bob</Arn>\n      <AssumedRoleId>ARO123EXAMPLE123:Bob</AssumedRoleId>\n    </AssumedRoleUser>\n    <PackedPolicySize>6</PackedPolicySize>\n  </AssumeRoleResult>\n  <ResponseMetadata>\n    <RequestId>c6104cbe-af31-11e0-8154-cbc7ccf896c7</RequestId>\n  </ResponseMetadata>\n</AssumeRoleResponse></queryresponse>\n\n    </examples>\n"
        },
        "GetFederationToken": {
            "input": {
                "shape_name": "GetFederationTokenRequest",
                "type": "structure",
                "members": {
                    "Name": {
                        "shape_name": "userNameType",
                        "type": "string",
                        "min_length": 2,
                        "max_length": 32,
                        "pattern": "[\\w+=,.@-]*",
                        "documentation": "\n    <p>The name of the federated user associated with the credentials. For information about limitations on user\n    names, go to <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a>\n        in <i>Using IAM</i>.</p>\n",
                        "required": true
                    },
                    "Policy": {
                        "shape_name": "sessionPolicyDocumentType",
                        "type": "string",
                        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
                        "min_length": 1,
                        "max_length": 2048,
                        "documentation": "\n    <p>A policy specifying the permissions to associate with the credentials. The caller can delegate their own permissions by\n       specifying a policy, and both policies will be checked when a service call is made. For more information about \n\thow permissions work in the context of temporary credentials, see <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/TokenPermissions.html\" target=\"_blank\">Controlling Permissions in Temporary Credentials</a> \n        in <i>Using IAM</i>.</p>\n"
                    },
                    "DurationSeconds": {
                        "shape_name": "durationSecondsType",
                        "type": "integer",
                        "min_length": 900,
                        "max_length": 129600,
                        "documentation": "\n    <p>The duration, in seconds, that the session should last. Acceptable durations for federation sessions \n    range from 900s (15 minutes) to 129600s (36 hours), with 43200s (12 hours) as the default.\n    Sessions for AWS account owners are restricted to a maximum of 3600s (one hour). If the duration is longer than one hour, the session for AWS account owners defaults to one hour.</p>\n"
                    }
                },
                "documentation": ""
            },
            "output": {
                "shape_name": "GetFederationTokenResponse",
                "type": "structure",
                "members": {
                    "Credentials": {
                        "shape_name": "Credentials",
                        "type": "structure",
                        "members": {
                            "AccessKeyId": {
                                "shape_name": "accessKeyIdType",
                                "type": "string",
                                "min_length": 16,
                                "max_length": 32,
                                "pattern": "[\\w]*",
                                "documentation": "\n\t<p>AccessKeyId ID that identifies the temporary credentials.</p>\n",
                                "required": true
                            },
                            "SecretAccessKey": {
                                "shape_name": "accessKeySecretType",
                                "type": "string",
                                "documentation": "\n\t<p>The Secret Access Key to sign requests.</p>\n",
                                "required": true
                            },
                            "SessionToken": {
                                "shape_name": "tokenType",
                                "type": "string",
                                "documentation": "\n\t<p>The security token that users must pass to the service API to use the temporary credentials.</p>\n",
                                "required": true
                            },
                            "Expiration": {
                                "shape_name": "dateType",
                                "type": "timestamp",
                                "documentation": "\n\t<p>The date on which these credentials expire.</p>\n",
                                "required": true
                            }
                        },
                        "documentation": "\n    <p>Credentials for the service API authentication. </p>\n"
                    },
                    "FederatedUser": {
                        "shape_name": "FederatedUser",
                        "type": "structure",
                        "members": {
                            "FederatedUserId": {
                                "shape_name": "federatedIdType",
                                "type": "string",
                                "min_length": 2,
                                "max_length": 96,
                                "pattern": "[\\w+=,.@\\:-]*",
                                "documentation": "\n\t<p>The string identifying the federated user associated with the credentials, similar to the UserId of an IAM user.</p>\n",
                                "required": true
                            },
                            "Arn": {
                                "shape_name": "arnType",
                                "type": "string",
                                "min_length": 20,
                                "max_length": 2048,
                                "documentation": "\n\t<p>The ARN specifying the federated user associated with the credentials. For more information about ARNs and how\n\t    to use them in policies, see  <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using IAM</i>.</p>\n",
                                "required": true
                            }
                        },
                        "documentation": "\n    <p>Identifiers for the federated user associated with the credentials. You can use the federated user's ARN in \n    your resource policies.</p>\n"
                    },
                    "PackedPolicySize": {
                        "shape_name": "nonNegativeIntegerType",
                        "type": "integer",
                        "min_length": 0,
                        "documentation": "\n    <p>A percentage value indicating the size of the policy in packed form. Policies for which the packed size is greater than\n       100% of the allowed value are rejected by the service.</p>\n"
                    }
                },
                "documentation": "\n    <p>Contains the result of a successful invocation of the <a>GetFederationToken</a> action.</p>\n  "
            },
            "errors": [
                {
                    "shape_name": "MalformedPolicyDocumentException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "malformedPolicyDocumentMessage",
                            "type": "string",
                            "documentation": ""
                        }
                    },
                    "documentation": "\n    <p>The request was rejected because the policy document was malformed. The error message describes the specific error.</p>\n"
                },
                {
                    "shape_name": "PackedPolicyTooLargeException",
                    "type": "structure",
                    "members": {
                        "message": {
                            "shape_name": "packedPolicyTooLargeMessage",
                            "type": "string",
                            "documentation": ""
                        }
                    },
                    "documentation": "\n    <p>The request was rejected because the policy document was too large. The error message describes how big the policy document\n       is, in packed form, as a percentage of what the API allows.</p>\n"
                }
            ],
            "documentation": "\n\t<p>The GetFederationToken action returns a set of temporary credentials for a federated user with the\n\tuser name and policy specified in the request. The credentials consist of an Access Key ID, a Secret Access \n\tKey, and a security token. Credentials created by IAM users are valid for the specified duration, between \n\t15 minutes and 36 hours; credentials created using account credentials have a maximum duration of one hour.</p>\n\n\t<p>The federated user who holds these credentials has any permissions allowed by \n\tthe intersection of the specified policy and any resource or user policies that apply to the caller of \n\tthe GetFederationToken API, and any resource policies that apply to the federated user's Amazon Resource Name (ARN). \n\tFor more information about how token permissions work, see <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/TokenPermissions.html\" target=\"_blank\">Controlling Permissions in Temporary Credentials</a> \n\tin <i>Using IAM</i>. For information about using GetFederationToken to \n\tcreate temporary credentials, \n\tsee <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/CreatingFedTokens.html\" target=\"_blank\">Creating Temporary Credentials to Enable Access for Federated Users</a> \n\t    in <i>Using IAM</i>.</p>\n\n\t<examples>\n\t<queryrequest>https://sts.amazonaws.com/\n?Version=2011-06-15\n&Action=GetFederationToken\n&Name=Bob\n&Policy=%7B%22Statement%22%3A%5B%7B%22Sid%22%3A%22Stmt1%22%2C%22Effect%22%\n 3A%22Allow%22%2C%22Action%22%3A%22s3%3A*%22%2C%22Resource%22%3A%22*%22%7D\n %5D%7D\n&DurationSeconds=3600\n&AUTHPARAMS</queryrequest>\n\n<queryresponse><GetFederationTokenResponse xmlns=\"https://sts.amazonaws.com/doc/\n2011-06-15/\">\n  <GetFederationTokenResult>\n    <Credentials>\n      <SessionToken>\n       AQoDYXdzEPT//////////wEXAMPLEtc764bNrC9SAPBSM22wDOk4x4HIZ8j4FZTwdQW\n       LWsKWHGBuFqwAeMicRXmxfpSPfIeoIYRqTflfKD8YUuwthAx7mSEI/qkPpKPi/kMcGd\n       QrmGdeehM4IC1NtBmUpp2wUE8phUZampKsburEDy0KPkyQDYwT7WZ0wq5VSXDvp75YU\n       9HFvlRd8Tx6q6fE8YQcHNVXAkiY9q6d+xo0rKwT38xVqr7ZD0u0iPPkUL64lIZbqBAz\n       +scqKmlzm8FDrypNC9Yjc8fPOLn9FX9KSYvKTr4rvx3iSIlTJabIQwj2ICCR/oLxBA==\n      </SessionToken>\n      <SecretAccessKey>\n       wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\n      </SecretAccessKey>\n      <Expiration>2011-07-15T23:28:33.359Z</Expiration>\n      <AccessKeyId>AKIAIOSFODNN7EXAMPLE</AccessKeyId>\n    </Credentials>\n    <FederatedUser>\n      <Arn>arn:aws:sts::123456789012:federated-user/Bob</Arn>\n      <FederatedUserId>123456789012:Bob</FederatedUserId>\n    </FederatedUser>\n    <PackedPolicySize>6</PackedPolicySize>\n  </GetFederationTokenResult>\n  <ResponseMetadata>\n    <RequestId>c6104cbe-af31-11e0-8154-cbc7ccf896c7</RequestId>\n  </ResponseMetadata>\n</GetFederationTokenResponse></queryresponse>\n\n\t</examples>\n"
        },
        "GetSessionToken": {
            "input": {
                "shape_name": "GetSessionTokenRequest",
                "type": "structure",
                "members": {
                    "DurationSeconds": {
                        "shape_name": "durationSecondsType",
                        "type": "integer",
                        "min_length": 900,
                        "max_length": 129600,
                        "documentation": "\n\t<p>The duration, in seconds, that the credentials should remain valid. Acceptable durations for\n\tIAM user sessions range from 900s (15 minutes) to 129600s (36 hours), with 43200s (12 hours) as the\n\t default. Sessions for AWS account owners are restricted to a maximum of 3600s (one hour). If the duration is longer than one hour, the session for AWS account owners defaults to one hour.</p>\n"
                    },
                    "SerialNumber": {
                        "shape_name": "serialNumberType",
                        "type": "string",
                        "min_length": 9,
                        "max_length": 256,
                        "pattern": "[\\w+=/:,.@-]*",
                        "documentation": "\n    <p>The identification number of the MFA device for the user. If the IAM user has a policy requiring MFA authentication (or is in a group requiring MFA authentication) to access resources, provide the device value here.</p>\n<p>The value is in the <b>Security Credentials</b> tab of the user's details pane in the IAM console. If the IAM user has an active MFA device, the details pane displays a <b>Multi-Factor Authentication Device</b> value. The value is either for a virtual device, such as <code>arn:aws:iam::123456789012:mfa/user</code>, or it is the device serial number for a hardware device (usually the number from the back of the device), such as <code>GAHT12345678</code>. For more information, see <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/Using_ManagingMFA.html\" target=\"_blank\">Using Multi-Factor Authentication (MFA) Devices with AWS</a> in <i>Using IAM</i>.</p>\n"
                    },
                    "TokenCode": {
                        "shape_name": "tokenCodeType",
                        "type": "string",
                        "min_length": 6,
                        "max_length": 6,
                        "pattern": "[\\d]*",
                        "documentation": "\n\t<p>The value provided by the MFA device. If the user has an access policy requiring an MFA code (or is in a group requiring an MFA code), provide the value here to get permission to resources as specified in the access policy. If MFA authentication is required, and the user does not provide a code when requesting a set of temporary security credentials, the user will receive an \"access denied\" response when requesting resources that require MFA authentication. For more information, see <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/Using_ManagingMFA.html\" target=\"_blank\">Using Multi-Factor Authentication (MFA) Devices with AWS</a> in <i>Using IAM</i>.</p>\n"
                    }
                },
                "documentation": ""
            },
            "output": {
                "shape_name": "GetSessionTokenResponse",
                "type": "structure",
                "members": {
                    "Credentials": {
                        "shape_name": "Credentials",
                        "type": "structure",
                        "members": {
                            "AccessKeyId": {
                                "shape_name": "accessKeyIdType",
                                "type": "string",
                                "min_length": 16,
                                "max_length": 32,
                                "pattern": "[\\w]*",
                                "documentation": "\n\t<p>AccessKeyId ID that identifies the temporary credentials.</p>\n",
                                "required": true
                            },
                            "SecretAccessKey": {
                                "shape_name": "accessKeySecretType",
                                "type": "string",
                                "documentation": "\n\t<p>The Secret Access Key to sign requests.</p>\n",
                                "required": true
                            },
                            "SessionToken": {
                                "shape_name": "tokenType",
                                "type": "string",
                                "documentation": "\n\t<p>The security token that users must pass to the service API to use the temporary credentials.</p>\n",
                                "required": true
                            },
                            "Expiration": {
                                "shape_name": "dateType",
                                "type": "timestamp",
                                "documentation": "\n\t<p>The date on which these credentials expire.</p>\n",
                                "required": true
                            }
                        },
                        "documentation": "\n    <p>The session credentials for API authentication. </p>\n"
                    }
                },
                "documentation": "\n    <p>Contains the result of a successful invocation of the <a>GetSessionToken</a> action.</p>\n  "
            },
            "errors": [],
            "documentation": "\n\t<p>The GetSessionToken action returns a set of temporary credentials for an AWS account or IAM user. \n\tThe credentials consist of an Access Key ID, a Secret Access Key, and a security token. These credentials are \n\tvalid for the specified duration only. The session duration for IAM users can be between 15 minutes and 36 hours, \n\twith a default of 12 hours. The session duration for AWS account owners is restricted to a maximum of one hour. Providing \n\tthe AWS Multi-Factor Authentication (MFA) device serial number and the token code is optional.</p>\n\t<p>For more information about using GetSessionToken to create temporary credentials, go to <a href=\"http://docs.amazonwebservices.com/IAM/latest/UserGuide/CreatingSessionTokens.html\" target=\"_blank\">Creating Temporary Credentials to Enable Access \n\tfor IAM Users</a> in <i>Using IAM</i>.</p>\n\t\n\t\n\t<examples>\n\t<queryrequest>https://sts.amazonaws.com/\n?Version=2011-06-15\n&Action=GetSessionToken\n&DurationSeconds=3600\n&SerialNumber=YourMFADeviceSerialNumber\n&TokenCode=123456\n&AUTHPARAMS</queryrequest>\n\n<queryresponse><GetSessionTokenResponse xmlns=\"https://sts.amazonaws.com/doc/2011-06-15/\">\n  <GetSessionTokenResult>\n    <Credentials>\n      <SessionToken>\n       AQoEXAMPLEH4aoAH0gNCAPyJxz4BlCFFxWNE1OPTgk5TthT+FvwqnKwRcOIfrRh3c/L\n       To6UDdyJwOOvEVPvLXCrrrUtdnniCEXAMPLE/IvU1dYUg2RVAJBanLiHb4IgRmpRV3z\n       rkuWJOgQs8IZZaIv2BXIa2R4OlgkBN9bkUDNCJiBeb/AXlzBBko7b15fjrBs2+cTQtp\n       Z3CYWFXG8C5zqx37wnOE49mRl/+OtkIKGO7fAE\n      </SessionToken>\n      <SecretAccessKey>\n      wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\n      </SecretAccessKey>\n      <Expiration>2011-07-11T19:55:29.611Z</Expiration>\n      <AccessKeyId>AKIAIOSFODNN7EXAMPLE</AccessKeyId>\n    </Credentials>\n  </GetSessionTokenResult>\n  <ResponseMetadata>\n    <RequestId>58c5dbae-abef-11e0-8cfe-09039844ac7d</RequestId>\n  </ResponseMetadata>\n</GetSessionTokenResponse></queryresponse>\n\t</examples>\n"
        }
    },
    "metadata": {
        "regions": {
            "us-east-1": "https://sts.amazonaws.com/",
            "us-gov-west-1": null
        },
        "protocols": [
            "https"
        ]
    }
}